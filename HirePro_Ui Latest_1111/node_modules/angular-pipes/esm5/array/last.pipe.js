import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var LastPipe = /** @class */ (function () {
    function LastPipe() {
    }
    LastPipe.prototype.transform = function (input) {
        if (!isArray(input)) {
            return input;
        }
        // Returns undefined if empty
        return input[input.length - 1];
    };
LastPipe.ɵfac = function LastPipe_Factory(t) { return new (t || LastPipe)(); };
LastPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "last", type: LastPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LastPipe, [{
        type: Pipe,
        args: [{
                name: 'last'
            }]
    }], function () { return []; }, null); })();
    return LastPipe;
}());
export { LastPipe };
var NgLastPipeModule = /** @class */ (function () {
    function NgLastPipeModule() {
    }
NgLastPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgLastPipeModule });
NgLastPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgLastPipeModule_Factory(t) { return new (t || NgLastPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgLastPipeModule, { declarations: [LastPipe], exports: [LastPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLastPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [LastPipe],
                exports: [LastPipe]
            }]
    }], function () { return []; }, null); })();
    return NgLastPipeModule;
}());
export { NgLastPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFzdC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L2xhc3QucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLekM7QUFBNEMsSUFBNUM7QUFBc0IsSUFTdEIsQ0FBQztBQUNELElBVEUsNEJBQVMsR0FBVCxVQUFVLEtBQVU7QUFBSSxRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksNkJBQTZCO0FBQ2pDLFFBQUksT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNuQyxJQUFFLENBQUM7SUFSVSxRQUFRLGdDQUhwQixJQUFJLENBQUMsY0FDSixJQUFJLEVBQUUsTUFBTTtNQUNiLENBQUMsUUFDVyxRQUFRLENBU3BCOzs7Ozs7Z0RBQ0Q7QUFDQSxJQUZBLGVBQUM7QUFFRCxDQUZDLEFBVEQsSUFTQztBQUNELFNBVmEsUUFBUTtBQWVyQjtBQUNtQixJQURuQjtBQUE4QixJQUFDLENBQUM7SUFBbkIsZ0JBQWdCLGdDQUo1QixRQUFRLENBQUMsY0FDUjtVQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FDeEIsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQ3BCLENBQUMsUUFDVyxnQkFBZ0IsQ0FBRzs7Ozs7Ozs7Z0RBQ2hDO0FBQUMsSUFEOEIsdUJBQUM7QUFDL0IsQ0FEK0IsQUFBaEMsSUFBZ0M7O0FBckJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFTQSxBQUFBLEFBUkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBUkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFTQSxBQUFBLEFBQUEsQUFBQSxBQVRBLEFBU0EsQUFUQSxBQUFBLEFBZUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGFzdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMYXN0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55KTogYW55IHtcclxuICAgIGlmICghaXNBcnJheShpbnB1dCkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybnMgdW5kZWZpbmVkIGlmIGVtcHR5XHJcbiAgICByZXR1cm4gaW5wdXRbaW5wdXQubGVuZ3RoIC0gMV07XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0xhc3RQaXBlXSxcclxuICBleHBvcnRzOiBbTGFzdFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdMYXN0UGlwZU1vZHVsZSB7fVxyXG4iXX0=