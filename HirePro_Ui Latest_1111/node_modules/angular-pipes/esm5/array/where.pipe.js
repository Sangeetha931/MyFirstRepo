import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray, isFunction, getProperty } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var WherePipe = /** @class */ (function () {
    function WherePipe() {
    }
    /**
     * Support a function or a value or the shorthand ['key', value] like the lodash shorthand.
     */
    WherePipe.prototype.transform = function (input, fn) {
        if (!isArray(input)) {
            return input;
        }
        if (isFunction(fn)) {
            return input.filter(fn);
        }
        else if (isArray(fn)) {
            var _a = tslib_1.__read(fn, 2), key_1 = _a[0], value_1 = _a[1];
            return input.filter(function (item) { return getProperty(item, key_1) === value_1; });
        }
        else if (fn) {
            return input.filter(function (item) { return item === fn; });
        }
        else {
            return input;
        }
    };
WherePipe.ɵfac = function WherePipe_Factory(t) { return new (t || WherePipe)(); };
WherePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "where", type: WherePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WherePipe, [{
        type: Pipe,
        args: [{
                name: 'where'
            }]
    }], function () { return []; }, null); })();
    return WherePipe;
}());
export { WherePipe };
var NgWherePipeModule = /** @class */ (function () {
    function NgWherePipeModule() {
    }
NgWherePipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgWherePipeModule });
NgWherePipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgWherePipeModule_Factory(t) { return new (t || NgWherePipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgWherePipeModule, { declarations: [WherePipe], exports: [WherePipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWherePipeModule, [{
        type: NgModule,
        args: [{
                declarations: [WherePipe],
                exports: [WherePipe]
            }]
    }], function () { return []; }, null); })();
    return NgWherePipeModule;
}());
export { NgWherePipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2hlcmUucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9hcnJheS93aGVyZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBS2xFO0FBQTZDLElBQTdDO0FBQXVCLElBb0J2QixDQUFDO0FBQ0QsSUFwQkU7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLDZCQUFTLEdBQVQsVUFBVSxLQUFVLEVBQUUsRUFBTztBQUFJLFFBQy9CLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDekIsWUFBTSxPQUFPLEtBQUssQ0FBQztBQUNuQixTQUFLO0FBQ0wsUUFDSSxJQUFJLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUN4QixZQUFNLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM5QixTQUFLO0FBQUMsYUFBSyxJQUFJLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUM1QixZQUFZLElBQUEsMEJBQWlCLEVBQWhCLGFBQUcsRUFBRSxlQUFXLENBQUM7QUFDOUIsWUFBTSxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQyxJQUFTLElBQUssT0FBQSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUcsQ0FBQyxLQUFLLE9BQUssRUFBaEMsQ0FBZ0MsQ0FBQyxDQUFDO0FBQzNFLFNBQUs7QUFBQyxhQUFLLElBQUksRUFBRSxFQUFFO0FBQ25CLFlBQU0sT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUMsSUFBUyxJQUFLLE9BQUEsSUFBSSxLQUFLLEVBQUUsRUFBWCxDQUFXLENBQUMsQ0FBQztBQUN0RCxTQUFLO0FBQUMsYUFBSztBQUNYLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLElBQUUsQ0FBQztJQW5CVSxTQUFTLGdDQUhyQixJQUFJLENBQUMsY0FDSixJQUFJLEVBQUUsT0FBTztLQUNkLENBQUMsUUFDVyxTQUFTLENBb0JyQjs7Ozs7O2dEQUNEO0FBQ0EsSUFGQSxnQkFBQztBQUVELENBRkMsQUFwQkQsSUFvQkM7QUFDRCxTQXJCYSxTQUFTO0FBMEJ0QjtBQUNtQixJQURuQjtBQUErQixJQUFDLENBQUM7SUFBcEIsaUJBQWlCLGdDQUo3QixRQUFRLENBQUMsY0FDUjtTQUFZLEVBQUUsQ0FBQyxTQUFTLENBQUMsY0FDekIsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLFdBQ3JCLENBQUMsUUFDVyxpQkFBaUIsQ0FBRzs7Ozs7Ozs7Z0RBQ2pDO0FBQUMsSUFEK0Isd0JBQUM7QUFDaEMsQ0FEZ0MsQUFBakMsSUFBaUM7O0FBaENBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQW9CQSxBQUFBLEFBbkJBLEFBRUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFuQkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFvQkEsQUFBQSxBQUFBLEFBQUEsQUFwQkEsQUFvQkEsQUFwQkEsQUFBQSxBQTBCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc0FycmF5LCBpc0Z1bmN0aW9uLCBnZXRQcm9wZXJ0eSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnd2hlcmUnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgV2hlcmVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgLyoqXHJcbiAgICogU3VwcG9ydCBhIGZ1bmN0aW9uIG9yIGEgdmFsdWUgb3IgdGhlIHNob3J0aGFuZCBbJ2tleScsIHZhbHVlXSBsaWtlIHRoZSBsb2Rhc2ggc2hvcnRoYW5kLlxyXG4gICAqL1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBmbjogYW55KTogYW55IHtcclxuICAgIGlmICghaXNBcnJheShpbnB1dCkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpc0Z1bmN0aW9uKGZuKSkge1xyXG4gICAgICByZXR1cm4gaW5wdXQuZmlsdGVyKGZuKTtcclxuICAgIH0gZWxzZSBpZiAoaXNBcnJheShmbikpIHtcclxuICAgICAgY29uc3QgW2tleSwgdmFsdWVdID0gZm47XHJcbiAgICAgIHJldHVybiBpbnB1dC5maWx0ZXIoKGl0ZW06IGFueSkgPT4gZ2V0UHJvcGVydHkoaXRlbSwga2V5KSA9PT0gdmFsdWUpO1xyXG4gICAgfSBlbHNlIGlmIChmbikge1xyXG4gICAgICByZXR1cm4gaW5wdXQuZmlsdGVyKChpdGVtOiBhbnkpID0+IGl0ZW0gPT09IGZuKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbV2hlcmVQaXBlXSxcclxuICBleHBvcnRzOiBbV2hlcmVQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nV2hlcmVQaXBlTW9kdWxlIHt9XHJcbiJdfQ==