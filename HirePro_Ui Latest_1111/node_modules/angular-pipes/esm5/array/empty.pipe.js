import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { empty } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var EmptyPipe = /** @class */ (function () {
    function EmptyPipe() {
    }
    EmptyPipe.prototype.transform = function (input) {
        return empty(input);
    };
EmptyPipe.ɵfac = function EmptyPipe_Factory(t) { return new (t || EmptyPipe)(); };
EmptyPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "empty", type: EmptyPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmptyPipe, [{
        type: Pipe,
        args: [{
                name: 'empty'
            }]
    }], function () { return []; }, null); })();
    return EmptyPipe;
}());
export { EmptyPipe };
var NgEmptyPipeModule = /** @class */ (function () {
    function NgEmptyPipeModule() {
    }
NgEmptyPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgEmptyPipeModule });
NgEmptyPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgEmptyPipeModule_Factory(t) { return new (t || NgEmptyPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgEmptyPipeModule, { declarations: [EmptyPipe], exports: [EmptyPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgEmptyPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [EmptyPipe],
                exports: [EmptyPipe]
            }]
    }], function () { return []; }, null); })();
    return NgEmptyPipeModule;
}());
export { NgEmptyPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHkucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9hcnJheS9lbXB0eS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUt2QztBQUE2QyxJQUE3QztBQUF1QixJQUl2QixDQUFDO0FBQ0QsSUFKRSw2QkFBUyxHQUFULFVBQVUsS0FBVTtBQUFJLFFBQ3RCLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3hCLElBQUUsQ0FBQztJQUhVLFNBQVMsZ0NBSHJCLElBQUksQ0FBQyxjQUNKLElBQUksRUFBRSxPQUFPO0tBQ2QsQ0FBQyxRQUNXLFNBQVMsQ0FJckI7Ozs7OztnREFDRDtBQUNBLElBRkEsZ0JBQUM7QUFFRCxDQUZDLEFBSkQsSUFJQztBQUNELFNBTGEsU0FBUztBQVV0QjtBQUNtQixJQURuQjtBQUErQixJQUFDLENBQUM7SUFBcEIsaUJBQWlCLGdDQUo3QixRQUFRLENBQUMsY0FDUjtTQUFZLEVBQUUsQ0FBQyxTQUFTLENBQUMsY0FDekIsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLFdBQ3JCLENBQUMsUUFDVyxpQkFBaUIsQ0FBRzs7Ozs7Ozs7Z0RBQ2pDO0FBQUMsSUFEK0Isd0JBQUM7QUFDaEMsQ0FEZ0MsQUFBakMsSUFBaUM7O0FBaEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGVtcHR5IH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdlbXB0eScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBFbXB0eVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSk6IGFueSB7XHJcbiAgICByZXR1cm4gZW1wdHkoaW5wdXQpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtFbXB0eVBpcGVdLFxyXG4gIGV4cG9ydHM6IFtFbXB0eVBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdFbXB0eVBpcGVNb2R1bGUge31cclxuIl19