import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { createRound, isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var FloorPipe = /** @class */ (function () {
    function FloorPipe() {
    }
    FloorPipe.prototype.transform = function (value, precision) {
        if (precision === void 0) { precision = 0; }
        if (isString(precision)) {
            precision = parseInt(precision);
        }
        return createRound('floor')(value, precision);
    };
FloorPipe.ɵfac = function FloorPipe_Factory(t) { return new (t || FloorPipe)(); };
FloorPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "floor", type: FloorPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FloorPipe, [{
        type: Pipe,
        args: [{
                name: 'floor'
            }]
    }], function () { return []; }, null); })();
    return FloorPipe;
}());
export { FloorPipe };
var NgFloorPipeModule = /** @class */ (function () {
    function NgFloorPipeModule() {
    }
NgFloorPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgFloorPipeModule });
NgFloorPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgFloorPipeModule_Factory(t) { return new (t || NgFloorPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgFloorPipeModule, { declarations: [FloorPipe], exports: [FloorPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFloorPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [FloorPipe],
                exports: [FloorPipe]
            }]
    }], function () { return []; }, null); })();
    return NgFloorPipeModule;
}());
export { NgFloorPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvb3IucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9tYXRoL2Zsb29yLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUt2RDtBQUE2QyxJQUE3QztBQUF1QixJQVF2QixDQUFDO0FBQ0QsSUFSRSw2QkFBUyxHQUFULFVBQVUsS0FBVSxFQUFFLFNBQWtCO0FBQUksUUFBdEIsMEJBQUEsRUFBQSxhQUFrQjtBQUFJLFFBQzFDLElBQUksUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFO0FBQzdCLFlBQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN0QyxTQUFLO0FBQ0wsUUFDSSxPQUFPLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDbEQsSUFBRSxDQUFDO0lBUFUsU0FBUyxnQ0FIckIsSUFBSSxDQUFDLGNBQ0osSUFBSSxFQUFFLE9BQU87S0FDZCxDQUFDLFFBQ1csU0FBUyxDQVFyQjs7Ozs7O2dEQUNEO0FBQ0EsSUFGQSxnQkFBQztBQUVELENBRkMsQUFSRCxJQVFDO0FBQ0QsU0FUYSxTQUFTO0FBY3RCO0FBQ21CLElBRG5CO0FBQStCLElBQUMsQ0FBQztJQUFwQixpQkFBaUIsZ0NBSjdCLFFBQVEsQ0FBQyxjQUNSO1NBQVksRUFBRSxDQUFDLFNBQVMsQ0FBQyxjQUN6QixPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUMsV0FDckIsQ0FBQyxRQUNXLGlCQUFpQixDQUFHOzs7Ozs7OztnREFDakM7QUFBQyxJQUQrQix3QkFBQztBQUNoQyxDQURnQyxBQUFqQyxJQUFpQzs7QUFwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFRQSxBQUFBLEFBUEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVBBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFSQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGNyZWF0ZVJvdW5kLCBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZmxvb3InLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmxvb3JQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBhbnksIHByZWNpc2lvbjogYW55ID0gMCk6IGFueSB7XHJcbiAgICBpZiAoaXNTdHJpbmcocHJlY2lzaW9uKSkge1xyXG4gICAgICBwcmVjaXNpb24gPSBwYXJzZUludChwcmVjaXNpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjcmVhdGVSb3VuZCgnZmxvb3InKSh2YWx1ZSwgcHJlY2lzaW9uKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbRmxvb3JQaXBlXSxcclxuICBleHBvcnRzOiBbRmxvb3JQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nRmxvb3JQaXBlTW9kdWxlIHt9XHJcbiJdfQ==