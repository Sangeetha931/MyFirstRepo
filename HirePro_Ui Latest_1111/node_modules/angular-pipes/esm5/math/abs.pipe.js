import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isNumberFinite } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var AbsPipe = /** @class */ (function () {
    function AbsPipe() {
    }
    AbsPipe.prototype.transform = function (input) {
        if (!isNumberFinite(input)) {
            return 'NaN';
        }
        return Math.abs(input);
    };
AbsPipe.ɵfac = function AbsPipe_Factory(t) { return new (t || AbsPipe)(); };
AbsPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "abs", type: AbsPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbsPipe, [{
        type: Pipe,
        args: [{
                name: 'abs'
            }]
    }], function () { return []; }, null); })();
    return AbsPipe;
}());
export { AbsPipe };
var NgAbsPipeModule = /** @class */ (function () {
    function NgAbsPipeModule() {
    }
NgAbsPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAbsPipeModule });
NgAbsPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgAbsPipeModule_Factory(t) { return new (t || NgAbsPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAbsPipeModule, { declarations: [AbsPipe], exports: [AbsPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgAbsPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [AbsPipe],
                exports: [AbsPipe]
            }]
    }], function () { return []; }, null); })();
    return NgAbsPipeModule;
}());
export { NgAbsPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzLnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvbWF0aC9hYnMucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLaEQ7QUFBMkMsSUFBM0M7QUFBcUIsSUFRckIsQ0FBQztBQUNELElBUkUsMkJBQVMsR0FBVCxVQUFVLEtBQVU7QUFBSSxRQUN0QixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ2hDLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNCLElBQUUsQ0FBQztJQVBVLE9BQU8sZ0NBSG5CLElBQUksQ0FBQyxjQUNKLElBQUksRUFBRSxLQUFLO09BQ1osQ0FBQyxRQUNXLE9BQU8sQ0FRbkI7Ozs7OztnREFDRDtBQUNBLElBRkEsY0FBQztBQUVELENBRkMsQUFSRCxJQVFDO0FBQ0QsU0FUYSxPQUFPO0FBY3BCO0FBQ21CLElBRG5CO0FBQTZCLElBQUMsQ0FBQztJQUFsQixlQUFlLGdDQUozQixRQUFRLENBQUMsY0FDUjtXQUFZLEVBQUUsQ0FBQyxPQUFPLENBQUMsY0FDdkIsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQ25CLENBQUMsUUFDVyxlQUFlLENBQUc7Ozs7Ozs7O2dEQUMvQjtBQUFDLElBRDZCLHNCQUFDO0FBQzlCLENBRDhCLEFBQS9CLElBQStCOztBQXBCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBUUEsQUFBQSxBQVBBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFQQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBQUEsQUFBQSxBQUFBLEFBUkEsQUFRQSxBQVJBLEFBQUEsQUFjQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc051bWJlckZpbml0ZSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnYWJzJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFic1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSk6IGFueSB7XHJcbiAgICBpZiAoIWlzTnVtYmVyRmluaXRlKGlucHV0KSkge1xyXG4gICAgICByZXR1cm4gJ05hTic7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE1hdGguYWJzKGlucHV0KTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbQWJzUGlwZV0sXHJcbiAgZXhwb3J0czogW0Fic1BpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdBYnNQaXBlTW9kdWxlIHt9XHJcbiJdfQ==