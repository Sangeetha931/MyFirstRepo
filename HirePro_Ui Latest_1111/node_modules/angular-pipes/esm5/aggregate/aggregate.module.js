import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgGroupByPipeModule } from './group-by.pipe';
import { NgMaxPipeModule } from './max.pipe';
import { NgMeanPipeModule } from './mean.pipe';
import { NgMinPipeModule } from './min.pipe';
import { NgSumPipeModule } from './sum.pipe';
import * as ɵngcc0 from '@angular/core';
var NgAggregatePipesModule = /** @class */ (function () {
    function NgAggregatePipesModule() {
    }
NgAggregatePipesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAggregatePipesModule });
NgAggregatePipesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgAggregatePipesModule_Factory(t) { return new (t || NgAggregatePipesModule)(); }, imports: [[NgGroupByPipeModule, NgMaxPipeModule, NgMeanPipeModule, NgMinPipeModule, NgSumPipeModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAggregatePipesModule, { imports: function () { return [NgGroupByPipeModule, NgMaxPipeModule, NgMeanPipeModule, NgMinPipeModule, NgSumPipeModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgAggregatePipesModule, [{
        type: NgModule,
        args: [{
                imports: [NgGroupByPipeModule, NgMaxPipeModule, NgMeanPipeModule, NgMinPipeModule, NgSumPipeModule]
            }]
    }], function () { return []; }, null); })();
    return NgAggregatePipesModule;
}());
export { NgAggregatePipesModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdncmVnYXRlLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9hZ2dyZWdhdGUvYWdncmVnYXRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUM7O0FBSzdDO0FBQ21CLElBRG5CO0FBQW9DLElBQUMsQ0FBQztJQUF6QixzQkFBc0IsZ0NBSGxDLFFBQVEsQ0FBQyxjQUNSLE9BQU87Q0FBRSxDQUFDLG1CQUFtQixFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsZUFBZSxDQUFDLFdBQ3BHLENBQUMsUUFDVyxzQkFBc0IsQ0FBRzs7Ozs7OztnREFDdEM7QUFBQyxJQURvQyw2QkFBQztBQUNyQyxDQURxQyxBQUF0QyxJQUFzQzs7QUFYQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IE5nR3JvdXBCeVBpcGVNb2R1bGUgfSBmcm9tICcuL2dyb3VwLWJ5LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ01heFBpcGVNb2R1bGUgfSBmcm9tICcuL21heC5waXBlJztcclxuaW1wb3J0IHsgTmdNZWFuUGlwZU1vZHVsZSB9IGZyb20gJy4vbWVhbi5waXBlJztcclxuaW1wb3J0IHsgTmdNaW5QaXBlTW9kdWxlIH0gZnJvbSAnLi9taW4ucGlwZSc7XHJcbmltcG9ydCB7IE5nU3VtUGlwZU1vZHVsZSB9IGZyb20gJy4vc3VtLnBpcGUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbTmdHcm91cEJ5UGlwZU1vZHVsZSwgTmdNYXhQaXBlTW9kdWxlLCBOZ01lYW5QaXBlTW9kdWxlLCBOZ01pblBpcGVNb2R1bGUsIE5nU3VtUGlwZU1vZHVsZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0FnZ3JlZ2F0ZVBpcGVzTW9kdWxlIHt9XHJcbiJdfQ==