import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var IsGreaterPipe = /** @class */ (function () {
    function IsGreaterPipe() {
    }
    IsGreaterPipe.prototype.transform = function (first, second) {
        return first > second;
    };
IsGreaterPipe.ɵfac = function IsGreaterPipe_Factory(t) { return new (t || IsGreaterPipe)(); };
IsGreaterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "greater", type: IsGreaterPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsGreaterPipe, [{
        type: Pipe,
        args: [{
                name: 'greater'
            }]
    }], function () { return []; }, null); })();
    return IsGreaterPipe;
}());
export { IsGreaterPipe };
var NgIsGreaterPipeModule = /** @class */ (function () {
    function NgIsGreaterPipeModule() {
    }
NgIsGreaterPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsGreaterPipeModule });
NgIsGreaterPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsGreaterPipeModule_Factory(t) { return new (t || NgIsGreaterPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsGreaterPipeModule, { declarations: [IsGreaterPipe], exports: [IsGreaterPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsGreaterPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsGreaterPipe],
                exports: [IsGreaterPipe]
            }]
    }], function () { return []; }, null); })();
    return NgIsGreaterPipeModule;
}());
export { NgIsGreaterPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZ3JlYXRlci5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtZ3JlYXRlci5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzlEO0FBQWlELElBQWpEO0FBQTJCLElBSTNCLENBQUM7QUFDRCxJQUpFLGlDQUFTLEdBQVQsVUFBVSxLQUFVLEVBQUUsTUFBVztBQUFJLFFBQ25DLE9BQU8sS0FBSyxHQUFHLE1BQU0sQ0FBQztBQUMxQixJQUFFLENBQUM7SUFIVSxhQUFhLGdDQUh6QixJQUFJLENBQUMsY0FDSixJQUFJLEVBQUUsU0FBUyxXQUNoQjtBQUFDLFFBQ1csYUFBYSxDQUl6Qjs7Ozs7O2dEQUNEO0FBQ0EsSUFGQSxvQkFBQztBQUVELENBRkMsQUFKRCxJQUlDO0FBQ0QsU0FMYSxhQUFhO0FBVTFCO0FBQ21CLElBRG5CO0FBQW1DLElBQUMsQ0FBQztJQUF4QixxQkFBcUIsZ0NBSmpDLFFBQVEsQ0FBQyxjQUNSO0tBQVksRUFBRSxDQUFDLGFBQWEsQ0FBQyxjQUM3QixPQUFPLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FDekIsQ0FBQyxRQUNXLHFCQUFxQixDQUFHOzs7Ozs7OztnREFDckM7QUFBQyxJQURtQyw0QkFBQztBQUNwQyxDQURvQyxBQUFyQyxJQUFxQzs7QUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSEEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBSUEsQUFKQSxBQUFBLEFBVUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSwgUGlwZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZ3JlYXRlcicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0dyZWF0ZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGZpcnN0OiBhbnksIHNlY29uZDogYW55KTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gZmlyc3QgPiBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzR3JlYXRlclBpcGVdLFxyXG4gIGV4cG9ydHM6IFtJc0dyZWF0ZXJQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nSXNHcmVhdGVyUGlwZU1vZHVsZSB7fVxyXG4iXX0=