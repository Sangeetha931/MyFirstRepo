import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isNull } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
var IsNullPipe = /** @class */ (function () {
    function IsNullPipe() {
    }
    IsNullPipe.prototype.transform = function (value) {
        return isNull(value);
    };
IsNullPipe.ɵfac = function IsNullPipe_Factory(t) { return new (t || IsNullPipe)(); };
IsNullPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isNull", type: IsNullPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsNullPipe, [{
        type: Pipe,
        args: [{
                name: 'isNull'
            }]
    }], function () { return []; }, null); })();
    return IsNullPipe;
}());
export { IsNullPipe };
var NgIsNullPipeModule = /** @class */ (function () {
    function NgIsNullPipeModule() {
    }
NgIsNullPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsNullPipeModule });
NgIsNullPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsNullPipeModule_Factory(t) { return new (t || NgIsNullPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsNullPipeModule, { declarations: [IsNullPipe], exports: [IsNullPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsNullPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsNullPipe],
                exports: [IsNullPipe]
            }]
    }], function () { return []; }, null); })();
    return NgIsNullPipeModule;
}());
export { NgIsNullPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbnVsbC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtbnVsbC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUt4QztBQUE4QyxJQUE5QztBQUF3QixJQUl4QixDQUFDO0FBQ0QsSUFKRSw4QkFBUyxHQUFULFVBQVUsS0FBVTtBQUFJLFFBQ3RCLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUUsQ0FBQztJQUhVLFVBQVUsZ0NBSHRCLElBQUksQ0FBQyxjQUNKLElBQUksRUFBRSxRQUFRO0lBQ2YsQ0FBQyxRQUNXLFVBQVUsQ0FJdEI7Ozs7OztnREFDRDtBQUNBLElBRkEsaUJBQUM7QUFFRCxDQUZDLEFBSkQsSUFJQztBQUNELFNBTGEsVUFBVTtBQVV2QjtBQUNtQixJQURuQjtBQUFnQyxJQUFDLENBQUM7SUFBckIsa0JBQWtCLGdDQUo5QixRQUFRLENBQUMsY0FDUjtRQUFZLEVBQUUsQ0FBQyxVQUFVLENBQUMsY0FDMUIsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFdBQ3RCLENBQUMsUUFDVyxrQkFBa0IsQ0FBRzs7Ozs7Ozs7Z0RBQ2xDO0FBQUMsSUFEZ0MseUJBQUM7QUFDakMsQ0FEaUMsQUFBbEMsSUFBa0M7O0FBaEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFJQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGVUcmFuc2Zvcm0sIFBpcGUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzTnVsbCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNOdWxsJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIElzTnVsbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0odmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIGlzTnVsbCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzTnVsbFBpcGVdLFxyXG4gIGV4cG9ydHM6IFtJc051bGxQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nSXNOdWxsUGlwZU1vZHVsZSB7fVxyXG4iXX0=