import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var IsLessPipe = /** @class */ (function () {
    function IsLessPipe() {
    }
    IsLessPipe.prototype.transform = function (first, second) {
        return first < second;
    };
IsLessPipe.ɵfac = function IsLessPipe_Factory(t) { return new (t || IsLessPipe)(); };
IsLessPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "less", type: IsLessPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsLessPipe, [{
        type: Pipe,
        args: [{
                name: 'less'
            }]
    }], function () { return []; }, null); })();
    return IsLessPipe;
}());
export { IsLessPipe };
var NgIsLessPipeModule = /** @class */ (function () {
    function NgIsLessPipeModule() {
    }
NgIsLessPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsLessPipeModule });
NgIsLessPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsLessPipeModule_Factory(t) { return new (t || NgIsLessPipeModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsLessPipeModule, { declarations: [IsLessPipe], exports: [IsLessPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsLessPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsLessPipe],
                exports: [IsLessPipe]
            }]
    }], function () { return []; }, null); })();
    return NgIsLessPipeModule;
}());
export { NgIsLessPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbGVzcy5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtbGVzcy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzlEO0FBQThDLElBQTlDO0FBQXdCLElBSXhCLENBQUM7QUFDRCxJQUpFLDhCQUFTLEdBQVQsVUFBVSxLQUFVLEVBQUUsTUFBVztBQUFJLFFBQ25DLE9BQU8sS0FBSyxHQUFHLE1BQU0sQ0FBQztBQUMxQixJQUFFLENBQUM7SUFIVSxVQUFVLGdDQUh0QixJQUFJLENBQUMsY0FDSixJQUFJLEVBQUUsTUFBTTtFQUNiLENBQUMsUUFDVyxVQUFVLENBSXRCOzs7Ozs7Z0RBQ0Q7QUFDQSxJQUZBLGlCQUFDO0FBRUQsQ0FGQyxBQUpELElBSUM7QUFDRCxTQUxhLFVBQVU7QUFVdkI7QUFDbUIsSUFEbkI7QUFBZ0MsSUFBQyxDQUFDO0lBQXJCLGtCQUFrQixnQ0FKOUIsUUFBUSxDQUFDLGNBQ1I7UUFBWSxFQUFFLENBQUMsVUFBVSxDQUFDLGNBQzFCLE9BQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUN0QixDQUFDLFFBQ1csa0JBQWtCLENBQUc7Ozs7Ozs7O2dEQUNsQztBQUFDLElBRGdDLHlCQUFDO0FBQ2pDLENBRGlDLEFBQWxDLElBQWtDOztBQWZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUlBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFIQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlVHJhbnNmb3JtLCBQaXBlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdsZXNzJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIElzTGVzc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBmaXJzdCA8IHNlY29uZDtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbSXNMZXNzUGlwZV0sXHJcbiAgZXhwb3J0czogW0lzTGVzc1BpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdJc0xlc3NQaXBlTW9kdWxlIHt9XHJcbiJdfQ==