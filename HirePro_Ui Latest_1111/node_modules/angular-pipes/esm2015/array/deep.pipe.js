import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { wrapDeep, isDeepObject } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let DeepPipe = class DeepPipe {
    transform(value) {
        if (isDeepObject(value)) {
            return value;
        }
        return wrapDeep(value);
    }
};
DeepPipe.ɵfac = function DeepPipe_Factory(t) { return new (t || DeepPipe)(); };
DeepPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "deep", type: DeepPipe, pure: true });
export { DeepPipe };
let NgDeepPipeModule = class NgDeepPipeModule {
};
NgDeepPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgDeepPipeModule });
NgDeepPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgDeepPipeModule_Factory(t) { return new (t || NgDeepPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DeepPipe, [{
        type: Pipe,
        args: [{
                name: 'deep'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgDeepPipeModule, { declarations: [DeepPipe], exports: [DeepPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgDeepPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [DeepPipe],
                exports: [DeepPipe]
            }]
    }], null, null); })();
export { NgDeepPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVlcC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L2RlZXAucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBS3hELElBQWEsUUFBUSxHQUFyQixNQUFhLFFBQVE7QUFBRyxJQUN0QixTQUFTLENBQUMsS0FBVTtBQUFJLFFBQ3RCLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQzdCLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksT0FBTyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBUlksUUFBUSw0QkFIcEIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLE1BQU0sT0FDYixDQUFDLElBQ1c7R0FBUSxDQVFwQiwrRUFDRDtBQUNBLFNBVmEsUUFBUTtBQWNyQixJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtBQUFHLENBQUEsQ0FBQTtBQUFuQixnQkFBZ0IsNEJBSjVCLFFBQVEsQ0FBQyxVQUNSLFlBQVk7QUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUN4QixPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FDcEIsQ0FBQyxJQUNXLGdCQUFnQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDaEM7O0FBckJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFSQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB3cmFwRGVlcCwgaXNEZWVwT2JqZWN0IH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdkZWVwJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERlZXBQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBhbnkpOiBhbnkge1xyXG4gICAgaWYgKGlzRGVlcE9iamVjdCh2YWx1ZSkpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB3cmFwRGVlcCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0RlZXBQaXBlXSxcclxuICBleHBvcnRzOiBbRGVlcFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdEZWVwUGlwZU1vZHVsZSB7fVxyXG4iXX0=