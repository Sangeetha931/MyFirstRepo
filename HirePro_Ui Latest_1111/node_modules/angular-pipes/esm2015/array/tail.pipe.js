import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TailPipe = class TailPipe {
    transform(input) {
        if (!isArray(input)) {
            return input;
        }
        return input.slice(1, input.length);
    }
};
TailPipe.ɵfac = function TailPipe_Factory(t) { return new (t || TailPipe)(); };
TailPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "tail", type: TailPipe, pure: true });
export { TailPipe };
let NgTailPipeModule = class NgTailPipeModule {
};
NgTailPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTailPipeModule });
NgTailPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTailPipeModule_Factory(t) { return new (t || NgTailPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TailPipe, [{
        type: Pipe,
        args: [{
                name: 'tail'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTailPipeModule, { declarations: [TailPipe], exports: [TailPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTailPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TailPipe],
                exports: [TailPipe]
            }]
    }], null, null); })();
export { NgTailPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFpbC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L3RhaWwucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLekMsSUFBYSxRQUFRLEdBQXJCLE1BQWEsUUFBUTtBQUFHLElBQ3RCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUN6QixZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hDLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVJZLFFBQVEsNEJBSHBCLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxNQUFNLE9BQ2IsQ0FBQyxJQUNXO0dBQVEsQ0FRcEIsK0VBQ0Q7QUFDQSxTQVZhLFFBQVE7QUFjckIsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7QUFBRyxDQUFBLENBQUE7QUFBbkIsZ0JBQWdCLDRCQUo1QixRQUFRLENBQUMsVUFDUixZQUFZO0FBQUUsQ0FBQyxRQUFRLENBQUMsVUFDeEIsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQ3BCLENBQUMsSUFDVyxnQkFBZ0IsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ2hDOztBQXJCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVJBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFSQSxBQUFBLEFBY0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzQXJyYXkgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ3RhaWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGFpbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSk6IGFueSB7XHJcbiAgICBpZiAoIWlzQXJyYXkoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gaW5wdXQuc2xpY2UoMSwgaW5wdXQubGVuZ3RoKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbVGFpbFBpcGVdLFxyXG4gIGV4cG9ydHM6IFtUYWlsUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1RhaWxQaXBlTW9kdWxlIHt9XHJcbiJdfQ==