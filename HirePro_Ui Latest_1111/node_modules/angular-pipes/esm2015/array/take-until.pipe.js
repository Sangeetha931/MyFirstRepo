import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray, takeUntil, isNil } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TakeUntilPipe = class TakeUntilPipe {
    transform(input, predicate) {
        if (!isArray(input) || isNil(predicate)) {
            return input;
        }
        return takeUntil(input, predicate);
    }
};
TakeUntilPipe.ɵfac = function TakeUntilPipe_Factory(t) { return new (t || TakeUntilPipe)(); };
TakeUntilPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "takeUntil", type: TakeUntilPipe, pure: true });
export { TakeUntilPipe };
let NgTakeUntilPipeModule = class NgTakeUntilPipeModule {
};
NgTakeUntilPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTakeUntilPipeModule });
NgTakeUntilPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTakeUntilPipeModule_Factory(t) { return new (t || NgTakeUntilPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TakeUntilPipe, [{
        type: Pipe,
        args: [{
                name: 'takeUntil'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTakeUntilPipeModule, { declarations: [TakeUntilPipe], exports: [TakeUntilPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTakeUntilPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TakeUntilPipe],
                exports: [TakeUntilPipe]
            }]
    }], null, null); })();
export { NgTakeUntilPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFrZS11bnRpbC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L3Rha2UtdW50aWwucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUF1QixLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLaEYsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtBQUFHLElBQzNCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsU0FBK0I7QUFBSSxRQUN2RCxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUM3QyxZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE9BQU8sU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN2QyxJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFSWSxhQUFhLDRCQUh6QixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsV0FBVyxPQUNsQixDQUFDLElBQ1c7R0FBYSxDQVF6Qiw4RkFDRDtBQUNBLFNBVmEsYUFBYTtBQWMxQixJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFxQjtBQUFHLENBQUEsQ0FBQTtBQUF4QixxQkFBcUIsNEJBSmpDLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRSxDQUFDO1NBQWEsQ0FBQyxVQUM3QixPQUFPLEVBQUUsQ0FBQyxhQUFhLENBQUMsT0FDekIsQ0FBQyxJQUNXLHFCQUFxQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDckM7O0FBckJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFSQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc0FycmF5LCB0YWtlVW50aWwsIENvbGxlY3Rpb25QcmVkaWNhdGUsIGlzTmlsIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICd0YWtlVW50aWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGFrZVVudGlsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcmVkaWNhdGU/OiBDb2xsZWN0aW9uUHJlZGljYXRlKTogYW55IHtcclxuICAgIGlmICghaXNBcnJheShpbnB1dCkgfHwgaXNOaWwocHJlZGljYXRlKSkge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRha2VVbnRpbChpbnB1dCwgcHJlZGljYXRlKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbVGFrZVVudGlsUGlwZV0sXHJcbiAgZXhwb3J0czogW1Rha2VVbnRpbFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdUYWtlVW50aWxQaXBlTW9kdWxlIHt9XHJcbiJdfQ==