import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let MapPipe = class MapPipe {
    transform(input, fn) {
        if (!isArray(input) || !fn) {
            return input;
        }
        return input.map(fn);
    }
};
MapPipe.ɵfac = function MapPipe_Factory(t) { return new (t || MapPipe)(); };
MapPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "map", type: MapPipe, pure: true });
export { MapPipe };
let NgMapPipeModule = class NgMapPipeModule {
};
NgMapPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgMapPipeModule });
NgMapPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgMapPipeModule_Factory(t) { return new (t || NgMapPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MapPipe, [{
        type: Pipe,
        args: [{
                name: 'map'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgMapPipeModule, { declarations: [MapPipe], exports: [MapPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgMapPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [MapPipe],
                exports: [MapPipe]
            }]
    }], null, null); })();
export { NgMapPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvYXJyYXkvbWFwLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBS3pDLElBQWEsT0FBTyxHQUFwQixNQUFhLE9BQU87QUFBRyxJQUNyQixTQUFTLENBQUMsS0FBVSxFQUFFLEVBQVk7QUFBSSxRQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO0FBQ2hDLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3pCLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVJZLE9BQU8sNEJBSG5CLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxLQUFLLE9BQ1osQ0FBQyxJQUNXO0dBQU8sQ0FRbkIsNEVBQ0Q7QUFDQSxTQVZhLE9BQU87QUFjcEIsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBZTtBQUFHLENBQUEsQ0FBQTtBQUFsQixlQUFlLDRCQUozQixRQUFRLENBQUMsVUFDUixZQUFZO0NBQUUsQ0FBQyxPQUFPLENBQUMsVUFDdkIsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLE9BQ25CLENBQUMsSUFDVyxlQUFlLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUMvQjs7QUFyQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVJBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFSQSxBQUFBLEFBY0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzQXJyYXkgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ21hcCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNYXBQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIGZuOiBGdW5jdGlvbik6IGFueSB7XHJcbiAgICBpZiAoIWlzQXJyYXkoaW5wdXQpIHx8ICFmbikge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGlucHV0Lm1hcChmbik7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW01hcFBpcGVdLFxyXG4gIGV4cG9ydHM6IFtNYXBQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nTWFwUGlwZU1vZHVsZSB7fVxyXG4iXX0=