import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray, takeWhile, isNil } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TakeWhilePipe = class TakeWhilePipe {
    transform(input, predicate) {
        if (!isArray(input) || isNil(predicate)) {
            return input;
        }
        return takeWhile(input, predicate);
    }
};
TakeWhilePipe.ɵfac = function TakeWhilePipe_Factory(t) { return new (t || TakeWhilePipe)(); };
TakeWhilePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "takeWhile", type: TakeWhilePipe, pure: true });
export { TakeWhilePipe };
let NgTakeWhilePipeModule = class NgTakeWhilePipeModule {
};
NgTakeWhilePipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTakeWhilePipeModule });
NgTakeWhilePipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTakeWhilePipeModule_Factory(t) { return new (t || NgTakeWhilePipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TakeWhilePipe, [{
        type: Pipe,
        args: [{
                name: 'takeWhile'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTakeWhilePipeModule, { declarations: [TakeWhilePipe], exports: [TakeWhilePipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTakeWhilePipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TakeWhilePipe],
                exports: [TakeWhilePipe]
            }]
    }], null, null); })();
export { NgTakeWhilePipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFrZS13aGlsZS5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L3Rha2Utd2hpbGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUF1QixLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLaEYsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtBQUFHLElBQzNCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsU0FBK0I7QUFBSSxRQUN2RCxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUM3QyxZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE9BQU8sU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztBQUN2QyxJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFSWSxhQUFhLDRCQUh6QixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsV0FBVyxPQUNsQixDQUFDLElBQ1c7R0FBYSxDQVF6Qiw4RkFDRDtBQUNBLFNBVmEsYUFBYTtBQWMxQixJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFxQjtBQUFHLENBQUEsQ0FBQTtBQUF4QixxQkFBcUIsNEJBSmpDLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRSxDQUFDO1NBQWEsQ0FBQyxVQUM3QixPQUFPLEVBQUUsQ0FBQyxhQUFhLENBQUMsT0FDekIsQ0FBQyxJQUNXLHFCQUFxQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDckM7O0FBckJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFSQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc0FycmF5LCB0YWtlV2hpbGUsIENvbGxlY3Rpb25QcmVkaWNhdGUsIGlzTmlsIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICd0YWtlV2hpbGUnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGFrZVdoaWxlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcmVkaWNhdGU/OiBDb2xsZWN0aW9uUHJlZGljYXRlKTogYW55IHtcclxuICAgIGlmICghaXNBcnJheShpbnB1dCkgfHwgaXNOaWwocHJlZGljYXRlKSkge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRha2VXaGlsZShpbnB1dCwgcHJlZGljYXRlKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbVGFrZVdoaWxlUGlwZV0sXHJcbiAgZXhwb3J0czogW1Rha2VXaGlsZVBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdUYWtlV2hpbGVQaXBlTW9kdWxlIHt9XHJcbiJdfQ==