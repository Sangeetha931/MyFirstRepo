import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { every } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let EveryPipe = class EveryPipe {
    transform(input, predicate) {
        return every(input, predicate);
    }
};
EveryPipe.ɵfac = function EveryPipe_Factory(t) { return new (t || EveryPipe)(); };
EveryPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "every", type: EveryPipe, pure: true });
export { EveryPipe };
let NgEveryPipeModule = class NgEveryPipeModule {
};
NgEveryPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgEveryPipeModule });
NgEveryPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgEveryPipeModule_Factory(t) { return new (t || NgEveryPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EveryPipe, [{
        type: Pipe,
        args: [{
                name: 'every'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgEveryPipeModule, { declarations: [EveryPipe], exports: [EveryPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgEveryPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [EveryPipe],
                exports: [EveryPipe]
            }]
    }], null, null); })();
export { NgEveryPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlcnkucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9hcnJheS9ldmVyeS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLEtBQUssRUFBdUIsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLNUQsSUFBYSxTQUFTLEdBQXRCLE1BQWEsU0FBUztBQUFHLElBQ3ZCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsU0FBOEI7QUFBSSxRQUN0RCxPQUFPLEtBQUssQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDbkMsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBSlksU0FBUyw0QkFIckIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLE9BQU8sT0FDZCxDQUFDLElBQ1c7R0FBUyxDQUlyQixrRkFDRDtBQUNBLFNBTmEsU0FBUztBQVV0QixJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtBQUFHLENBQUEsQ0FBQTtBQUFwQixpQkFBaUIsNEJBSjdCLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRTtBQUFDLFNBQVMsQ0FBQyxVQUN6QixPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FDckIsQ0FBQyxJQUNXLGlCQUFpQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDakM7O0FBakJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZXZlcnksIENvbGxlY3Rpb25QcmVkaWNhdGUgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2V2ZXJ5JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEV2ZXJ5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcmVkaWNhdGU6IENvbGxlY3Rpb25QcmVkaWNhdGUpOiBhbnkge1xyXG4gICAgcmV0dXJuIGV2ZXJ5KGlucHV0LCBwcmVkaWNhdGUpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtFdmVyeVBpcGVdLFxyXG4gIGV4cG9ydHM6IFtFdmVyeVBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdFdmVyeVBpcGVNb2R1bGUge31cclxuIl19