import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let HeadPipe = class HeadPipe {
    transform(input) {
        if (!isArray(input)) {
            return input;
        }
        // Will return undefined if length is 0
        return input[0];
    }
};
HeadPipe.ɵfac = function HeadPipe_Factory(t) { return new (t || HeadPipe)(); };
HeadPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "head", type: HeadPipe, pure: true });
export { HeadPipe };
let NgHeadPipeModule = class NgHeadPipeModule {
};
NgHeadPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgHeadPipeModule });
NgHeadPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgHeadPipeModule_Factory(t) { return new (t || NgHeadPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeadPipe, [{
        type: Pipe,
        args: [{
                name: 'head'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgHeadPipeModule, { declarations: [HeadPipe], exports: [HeadPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgHeadPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [HeadPipe],
                exports: [HeadPipe]
            }]
    }], null, null); })();
export { NgHeadPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L2hlYWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLekMsSUFBYSxRQUFRLEdBQXJCLE1BQWEsUUFBUTtBQUFHLElBQ3RCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUN6QixZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLHVDQUF1QztBQUMzQyxRQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVRZLFFBQVEsNEJBSHBCLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxNQUFNLE9BQ2IsQ0FBQyxJQUNXO0dBQVEsQ0FTcEIsK0VBQ0Q7QUFDQSxTQVhhLFFBQVE7QUFlckIsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7QUFBRyxDQUFBLENBQUE7QUFBbkIsZ0JBQWdCLDRCQUo1QixRQUFRLENBQUMsVUFDUixZQUFZO0FBQUUsQ0FBQyxRQUFRLENBQUMsVUFDeEIsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQ3BCLENBQUMsSUFDVyxnQkFBZ0IsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ2hDOztBQXRCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFUQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVNBLEFBVEEsQUFBQSxBQWVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc0FycmF5IH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdoZWFkJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEhlYWRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnkpOiBhbnkge1xyXG4gICAgaWYgKCFpc0FycmF5KGlucHV0KSkge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gV2lsbCByZXR1cm4gdW5kZWZpbmVkIGlmIGxlbmd0aCBpcyAwXHJcbiAgICByZXR1cm4gaW5wdXRbMF07XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0hlYWRQaXBlXSxcclxuICBleHBvcnRzOiBbSGVhZFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdIZWFkUGlwZU1vZHVsZSB7fVxyXG4iXX0=