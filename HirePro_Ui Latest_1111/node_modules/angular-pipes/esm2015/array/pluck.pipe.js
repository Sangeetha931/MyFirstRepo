import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray, getProperty } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let PluckPipe = class PluckPipe {
    transform(input, key) {
        if (!isArray(input) || !key) {
            return input;
        }
        return input.map((value) => {
            return getProperty(value, key);
        });
    }
};
PluckPipe.ɵfac = function PluckPipe_Factory(t) { return new (t || PluckPipe)(); };
PluckPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "pluck", type: PluckPipe, pure: true });
export { PluckPipe };
let NgPluckPipeModule = class NgPluckPipeModule {
};
NgPluckPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgPluckPipeModule });
NgPluckPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgPluckPipeModule_Factory(t) { return new (t || NgPluckPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PluckPipe, [{
        type: Pipe,
        args: [{
                name: 'pluck'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgPluckPipeModule, { declarations: [PluckPipe], exports: [PluckPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgPluckPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [PluckPipe],
                exports: [PluckPipe]
            }]
    }], null, null); })();
export { NgPluckPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Y2sucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9hcnJheS9wbHVjay5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLdEQsSUFBYSxTQUFTLEdBQXRCLE1BQWEsU0FBUztBQUFHLElBQ3ZCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsR0FBVztBQUFJLFFBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7QUFDakMsWUFBTSxPQUFPLEtBQUssQ0FBQztBQUNuQixTQUFLO0FBQ0wsUUFDSSxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFVLEVBQUUsRUFBRTtBQUNwQyxZQUFNLE9BQU8sV0FBVyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNyQyxRQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBVlksU0FBUyw0QkFIckIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLE9BQU8sT0FDZCxDQUFDLElBQ1c7R0FBUyxDQVVyQixrRkFDRDtBQUNBLFNBWmEsU0FBUztBQWdCdEIsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7QUFBRyxDQUFBLENBQUE7QUFBcEIsaUJBQWlCLDRCQUo3QixRQUFRLENBQUMsVUFDUixZQUFZLEVBQUU7QUFBQyxTQUFTLENBQUMsVUFDekIsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLE9BQ3JCLENBQUMsSUFDVyxpQkFBaUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ2pDOztBQXZCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFWQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVVBLEFBVkEsQUFBQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNBcnJheSwgZ2V0UHJvcGVydHkgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ3BsdWNrJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFBsdWNrUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBrZXk6IHN0cmluZyk6IGFueSB7XHJcbiAgICBpZiAoIWlzQXJyYXkoaW5wdXQpIHx8ICFrZXkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBpbnB1dC5tYXAoKHZhbHVlOiBhbnkpID0+IHtcclxuICAgICAgcmV0dXJuIGdldFByb3BlcnR5KHZhbHVlLCBrZXkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1BsdWNrUGlwZV0sXHJcbiAgZXhwb3J0czogW1BsdWNrUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1BsdWNrUGlwZU1vZHVsZSB7fVxyXG4iXX0=