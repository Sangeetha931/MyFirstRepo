import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isArray } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let LastPipe = class LastPipe {
    transform(input) {
        if (!isArray(input)) {
            return input;
        }
        // Returns undefined if empty
        return input[input.length - 1];
    }
};
LastPipe.ɵfac = function LastPipe_Factory(t) { return new (t || LastPipe)(); };
LastPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "last", type: LastPipe, pure: true });
export { LastPipe };
let NgLastPipeModule = class NgLastPipeModule {
};
NgLastPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgLastPipeModule });
NgLastPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgLastPipeModule_Factory(t) { return new (t || NgLastPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LastPipe, [{
        type: Pipe,
        args: [{
                name: 'last'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgLastPipeModule, { declarations: [LastPipe], exports: [LastPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLastPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [LastPipe],
                exports: [LastPipe]
            }]
    }], null, null); })();
export { NgLastPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFzdC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2FycmF5L2xhc3QucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLekMsSUFBYSxRQUFRLEdBQXJCLE1BQWEsUUFBUTtBQUFHLElBQ3RCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUN6QixZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLDZCQUE2QjtBQUNqQyxRQUFJLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDbkMsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBVFksUUFBUSw0QkFIcEIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLE1BQU0sT0FDYixDQUFDLElBQ1c7R0FBUSxDQVNwQiwrRUFDRDtBQUNBLFNBWGEsUUFBUTtBQWVyQixJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtBQUFHLENBQUEsQ0FBQTtBQUFuQixnQkFBZ0IsNEJBSjVCLFFBQVEsQ0FBQyxVQUNSLFlBQVk7QUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUN4QixPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FDcEIsQ0FBQyxJQUNXLGdCQUFnQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDaEM7O0FBdEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBVEEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFTQSxBQVRBLEFBQUEsQUFlQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGFzdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMYXN0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55KTogYW55IHtcclxuICAgIGlmICghaXNBcnJheShpbnB1dCkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybnMgdW5kZWZpbmVkIGlmIGVtcHR5XHJcbiAgICByZXR1cm4gaW5wdXRbaW5wdXQubGVuZ3RoIC0gMV07XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0xhc3RQaXBlXSxcclxuICBleHBvcnRzOiBbTGFzdFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdMYXN0UGlwZU1vZHVsZSB7fVxyXG4iXX0=