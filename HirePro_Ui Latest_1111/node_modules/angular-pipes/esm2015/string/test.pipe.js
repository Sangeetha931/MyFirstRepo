import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TestPipe = class TestPipe {
    transform(input, pattern, flag) {
        if (!isString(input) || !pattern) {
            return input;
        }
        const regexp = pattern instanceof RegExp ? pattern : new RegExp(pattern, flag);
        return regexp.test(input);
    }
};
TestPipe.ɵfac = function TestPipe_Factory(t) { return new (t || TestPipe)(); };
TestPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "test", type: TestPipe, pure: true });
export { TestPipe };
let NgTestPipeModule = class NgTestPipeModule {
};
NgTestPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTestPipeModule });
NgTestPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTestPipeModule_Factory(t) { return new (t || NgTestPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TestPipe, [{
        type: Pipe,
        args: [{
                name: 'test'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTestPipeModule, { declarations: [TestPipe], exports: [TestPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTestPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TestPipe],
                exports: [TestPipe]
            }]
    }], null, null); })();
export { NgTestPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL3N0cmluZy90ZXN0LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBSzFDLElBQWEsUUFBUSxHQUFyQixNQUFhLFFBQVE7QUFBRyxJQUN0QixTQUFTLENBQUMsS0FBVSxFQUFFLE9BQVksRUFBRSxJQUFTO0FBQUksUUFDL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtBQUN0QyxZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE1BQU0sTUFBTSxHQUFHLE9BQU8sWUFBWSxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25GLFFBQ0ksT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlCLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVZZLFFBQVEsNEJBSHBCLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxNQUFNLE9BQ2IsQ0FBQyxJQUNXO0dBQVEsQ0FVcEIsK0VBQ0Q7QUFDQSxTQVphLFFBQVE7QUFnQnJCLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0FBQUcsQ0FBQSxDQUFBO0FBQW5CLGdCQUFnQiw0QkFKNUIsUUFBUSxDQUFDLFVBQ1IsWUFBWTtBQUFFLENBQUMsUUFBUSxDQUFDLFVBQ3hCLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUNwQixDQUFDLElBQ1csZ0JBQWdCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUNoQzs7QUF2QkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVZBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBVUEsQUFWQSxBQUFBLEFBZ0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAndGVzdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUZXN0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwYXR0ZXJuOiBhbnksIGZsYWc6IGFueSk6IGFueSB7XHJcbiAgICBpZiAoIWlzU3RyaW5nKGlucHV0KSB8fCAhcGF0dGVybikge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcmVnZXhwID0gcGF0dGVybiBpbnN0YW5jZW9mIFJlZ0V4cCA/IHBhdHRlcm4gOiBuZXcgUmVnRXhwKHBhdHRlcm4sIGZsYWcpO1xyXG5cclxuICAgIHJldHVybiByZWdleHAudGVzdChpbnB1dCk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1Rlc3RQaXBlXSxcclxuICBleHBvcnRzOiBbVGVzdFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdUZXN0UGlwZU1vZHVsZSB7fVxyXG4iXX0=