import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString, upperFirst } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let UpperFirstPipe = class UpperFirstPipe {
    transform(input) {
        if (!isString(input)) {
            return input;
        }
        return upperFirst(input);
    }
};
UpperFirstPipe.ɵfac = function UpperFirstPipe_Factory(t) { return new (t || UpperFirstPipe)(); };
UpperFirstPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "upperfirst", type: UpperFirstPipe, pure: true });
export { UpperFirstPipe };
let NgUpperFirstPipeModule = class NgUpperFirstPipeModule {
};
NgUpperFirstPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgUpperFirstPipeModule });
NgUpperFirstPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgUpperFirstPipeModule_Factory(t) { return new (t || NgUpperFirstPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UpperFirstPipe, [{
        type: Pipe,
        args: [{
                name: 'upperfirst'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgUpperFirstPipeModule, { declarations: [UpperFirstPipe], exports: [UpperFirstPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgUpperFirstPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [UpperFirstPipe],
                exports: [UpperFirstPipe]
            }]
    }], null, null); })();
export { NgUpperFirstPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBwZXJmaXJzdC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL3N0cmluZy91cHBlcmZpcnN0LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUt0RCxJQUFhLGNBQWMsR0FBM0IsTUFBYSxjQUFjO0FBQUcsSUFDNUIsU0FBUyxDQUFDLEtBQVU7QUFBSSxRQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQzFCLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksT0FBTyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDN0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBUlksY0FBYyw0QkFIMUIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLFlBQVksT0FDbkIsQ0FBQyxJQUNXO0dBQWMsQ0FRMUIsaUdBQ0Q7QUFDQSxTQVZhLGNBQWM7QUFjM0IsSUFBYSxzQkFBc0IsR0FBbkMsTUFBYSxzQkFBc0I7QUFBRyxDQUFBLENBQUE7QUFBekIsc0JBQXNCLDRCQUpsQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFjLENBQUMsVUFDOUIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDLE9BQzFCLENBQUMsSUFDVyxzQkFBc0IsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3RDOztBQXJCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFSQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZywgdXBwZXJGaXJzdCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAndXBwZXJmaXJzdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBVcHBlckZpcnN0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55KTogYW55IHtcclxuICAgIGlmICghaXNTdHJpbmcoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdXBwZXJGaXJzdChpbnB1dCk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1VwcGVyRmlyc3RQaXBlXSxcclxuICBleHBvcnRzOiBbVXBwZXJGaXJzdFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdVcHBlckZpcnN0UGlwZU1vZHVsZSB7fVxyXG4iXX0=