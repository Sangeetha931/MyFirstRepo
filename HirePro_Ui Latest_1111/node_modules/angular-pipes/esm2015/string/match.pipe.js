import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let MatchPipe = class MatchPipe {
    transform(input, pattern, flag) {
        if (!isString(input)) {
            return input;
        }
        const regexp = pattern instanceof RegExp ? pattern : new RegExp(pattern, flag);
        return input.match(regexp);
    }
};
MatchPipe.ɵfac = function MatchPipe_Factory(t) { return new (t || MatchPipe)(); };
MatchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "match", type: MatchPipe, pure: true });
export { MatchPipe };
let NgMatchPipeModule = class NgMatchPipeModule {
};
NgMatchPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgMatchPipeModule });
NgMatchPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgMatchPipeModule_Factory(t) { return new (t || NgMatchPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatchPipe, [{
        type: Pipe,
        args: [{
                name: 'match'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgMatchPipeModule, { declarations: [MatchPipe], exports: [MatchPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgMatchPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [MatchPipe],
                exports: [MatchPipe]
            }]
    }], null, null); })();
export { NgMatchPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2gucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9zdHJpbmcvbWF0Y2gucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLMUMsSUFBYSxTQUFTLEdBQXRCLE1BQWEsU0FBUztBQUFHLElBQ3ZCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBWSxFQUFFLElBQVM7QUFBSSxRQUMvQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQzFCLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksTUFBTSxNQUFNLEdBQUcsT0FBTyxZQUFZLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbkYsUUFBSSxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDL0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBVFksU0FBUyw0QkFIckIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLE9BQU8sT0FDZCxDQUFDLElBQ1c7R0FBUyxDQVNyQixrRkFDRDtBQUNBLFNBWGEsU0FBUztBQWV0QixJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtBQUFHLENBQUEsQ0FBQTtBQUFwQixpQkFBaUIsNEJBSjdCLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRTtBQUFDLFNBQVMsQ0FBQyxVQUN6QixPQUFPLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FDckIsQ0FBQyxJQUNXLGlCQUFpQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDakM7O0FBdEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFUQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVNBLEFBVEEsQUFBQSxBQWVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbWF0Y2gnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0Y2hQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIHBhdHRlcm46IGFueSwgZmxhZzogYW55KTogYW55IHtcclxuICAgIGlmICghaXNTdHJpbmcoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCByZWdleHAgPSBwYXR0ZXJuIGluc3RhbmNlb2YgUmVnRXhwID8gcGF0dGVybiA6IG5ldyBSZWdFeHAocGF0dGVybiwgZmxhZyk7XHJcbiAgICByZXR1cm4gaW5wdXQubWF0Y2gocmVnZXhwKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbTWF0Y2hQaXBlXSxcclxuICBleHBvcnRzOiBbTWF0Y2hQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nTWF0Y2hQaXBlTW9kdWxlIHt9XHJcbiJdfQ==