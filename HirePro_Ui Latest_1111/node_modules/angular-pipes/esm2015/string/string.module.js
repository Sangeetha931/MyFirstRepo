import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgLeftPadPipeModule } from './left-pad.pipe';
import { NgMatchPipeModule } from './match.pipe';
import { NgPadPipeModule } from './pad.pipe';
import { NgReplacePipeModule } from './replace.pipe';
import { NgRightPadPipeModule } from './right-pad.pipe';
import { NgSplitPipeModule } from './split.pipe';
import { NgTestPipeModule } from './test.pipe';
import { NgTrimPipeModule } from './trim.pipe';
import { NgNewlinesPipeModule } from './newlines.pipe';
import { NgCapitalizePipeModule } from './capitalize.pipe';
import { NgUpperFirstPipeModule } from './upperfirst.pipe';
import { NgTemplatePipeModule } from './template.pipe';
import { NgEncodeURIPipeModule } from './encode-uri.pipe';
import { NgEncodeURIComponentPipeModule } from './encode-uri-component.pipe';
import { NgDecodeURIPipeModule } from './decode-uri.pipe';
import { NgDecodeURIComponentPipeModule } from './decode-uri-component.pipe';
import { NgTruncatePipeModule } from './truncate.pipe';
import { NgRepeatPipeModule } from './repeat.pipe';
import { NgSlugifyPipeModule } from './slugify.pipe';
import { NgStripTagsPipeModule } from './strip-tags.pipe';
import { NgLatinizePipeModule } from './latinize.pipe';
import { NgWrapPipeModule } from './wrap.pipe';
import { NgWithPipeModule } from './with.pipe';
import { NgReverseStrPipeModule } from './reverse-str.pipe';
import * as ɵngcc0 from '@angular/core';
let NgStringPipesModule = class NgStringPipesModule {
};
NgStringPipesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgStringPipesModule });
NgStringPipesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgStringPipesModule_Factory(t) { return new (t || NgStringPipesModule)(); }, imports: [[
            NgCapitalizePipeModule,
            NgDecodeURIComponentPipeModule,
            NgDecodeURIPipeModule,
            NgEncodeURIComponentPipeModule,
            NgLeftPadPipeModule,
            NgMatchPipeModule,
            NgPadPipeModule,
            NgReplacePipeModule,
            NgRightPadPipeModule,
            NgSplitPipeModule,
            NgTestPipeModule,
            NgTrimPipeModule,
            NgNewlinesPipeModule,
            NgUpperFirstPipeModule,
            NgTemplatePipeModule,
            NgEncodeURIPipeModule,
            NgTruncatePipeModule,
            NgRepeatPipeModule,
            NgSlugifyPipeModule,
            NgStripTagsPipeModule,
            NgLatinizePipeModule,
            NgWrapPipeModule,
            NgWithPipeModule,
            NgReverseStrPipeModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgStringPipesModule, { imports: function () { return [NgCapitalizePipeModule,
        NgDecodeURIComponentPipeModule,
        NgDecodeURIPipeModule,
        NgEncodeURIComponentPipeModule,
        NgLeftPadPipeModule,
        NgMatchPipeModule,
        NgPadPipeModule,
        NgReplacePipeModule,
        NgRightPadPipeModule,
        NgSplitPipeModule,
        NgTestPipeModule,
        NgTrimPipeModule,
        NgNewlinesPipeModule,
        NgUpperFirstPipeModule,
        NgTemplatePipeModule,
        NgEncodeURIPipeModule,
        NgTruncatePipeModule,
        NgRepeatPipeModule,
        NgSlugifyPipeModule,
        NgStripTagsPipeModule,
        NgLatinizePipeModule,
        NgWrapPipeModule,
        NgWithPipeModule,
        NgReverseStrPipeModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgStringPipesModule, [{
        type: NgModule,
        args: [{
                imports: [
                    NgCapitalizePipeModule,
                    NgDecodeURIComponentPipeModule,
                    NgDecodeURIPipeModule,
                    NgEncodeURIComponentPipeModule,
                    NgLeftPadPipeModule,
                    NgMatchPipeModule,
                    NgPadPipeModule,
                    NgReplacePipeModule,
                    NgRightPadPipeModule,
                    NgSplitPipeModule,
                    NgTestPipeModule,
                    NgTrimPipeModule,
                    NgNewlinesPipeModule,
                    NgUpperFirstPipeModule,
                    NgTemplatePipeModule,
                    NgEncodeURIPipeModule,
                    NgTruncatePipeModule,
                    NgRepeatPipeModule,
                    NgSlugifyPipeModule,
                    NgStripTagsPipeModule,
                    NgLatinizePipeModule,
                    NgWrapPipeModule,
                    NgWithPipeModule,
                    NgReverseStrPipeModule,
                ]
            }]
    }], null, null); })();
export { NgStringPipesModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9zdHJpbmcvc3RyaW5nLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM3QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDMUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUE4QjVELElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0FBQUcsQ0FBQSxDQUFBO0FBQXRCLG1CQUFtQiw0QkE1Qi9CLFFBQVEsQ0FBQyxVQUNSLE9BQU8sRUFBRTtNQUNQLHNCQUFzQixjQUN0Qiw4QkFBOEIsY0FDOUIscUJBQXFCLGNBQ3JCLDhCQUE4QjtLQUM5QixtQkFBbUI7RUFDbkIsaUJBQWlCLGNBQ2pCO0lBQWUsY0FDZjtFQUFtQixjQUNuQixvQkFBb0I7TUFDcEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtHQUNoQixnQkFBZ0I7SUFDaEIsb0JBQW9CO0tBQ3BCLHNCQUFzQjtPQUN0QixvQkFBb0I7VUFDcEI7Q0FBcUIsY0FDckI7S0FBb0IsY0FDcEI7R0FBa0IsY0FDbEI7QUFBbUIsY0FDbkI7Q0FBcUIsY0FDckI7QUFBb0IsY0FDcEIsZ0JBQWdCO1VBQ2hCLGdCQUFnQjtRQUNoQixzQkFBc0I7UUFDdkIsT0FDRixDQUFDLElBQ1c7SUFBbUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ25DOztBQXhEQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBOEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBNUJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgTmdMZWZ0UGFkUGlwZU1vZHVsZSB9IGZyb20gJy4vbGVmdC1wYWQucGlwZSc7XHJcbmltcG9ydCB7IE5nTWF0Y2hQaXBlTW9kdWxlIH0gZnJvbSAnLi9tYXRjaC5waXBlJztcclxuaW1wb3J0IHsgTmdQYWRQaXBlTW9kdWxlIH0gZnJvbSAnLi9wYWQucGlwZSc7XHJcbmltcG9ydCB7IE5nUmVwbGFjZVBpcGVNb2R1bGUgfSBmcm9tICcuL3JlcGxhY2UucGlwZSc7XHJcbmltcG9ydCB7IE5nUmlnaHRQYWRQaXBlTW9kdWxlIH0gZnJvbSAnLi9yaWdodC1wYWQucGlwZSc7XHJcbmltcG9ydCB7IE5nU3BsaXRQaXBlTW9kdWxlIH0gZnJvbSAnLi9zcGxpdC5waXBlJztcclxuaW1wb3J0IHsgTmdUZXN0UGlwZU1vZHVsZSB9IGZyb20gJy4vdGVzdC5waXBlJztcclxuaW1wb3J0IHsgTmdUcmltUGlwZU1vZHVsZSB9IGZyb20gJy4vdHJpbS5waXBlJztcclxuaW1wb3J0IHsgTmdOZXdsaW5lc1BpcGVNb2R1bGUgfSBmcm9tICcuL25ld2xpbmVzLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0NhcGl0YWxpemVQaXBlTW9kdWxlIH0gZnJvbSAnLi9jYXBpdGFsaXplLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1VwcGVyRmlyc3RQaXBlTW9kdWxlIH0gZnJvbSAnLi91cHBlcmZpcnN0LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1RlbXBsYXRlUGlwZU1vZHVsZSB9IGZyb20gJy4vdGVtcGxhdGUucGlwZSc7XHJcbmltcG9ydCB7IE5nRW5jb2RlVVJJUGlwZU1vZHVsZSB9IGZyb20gJy4vZW5jb2RlLXVyaS5waXBlJztcclxuaW1wb3J0IHsgTmdFbmNvZGVVUklDb21wb25lbnRQaXBlTW9kdWxlIH0gZnJvbSAnLi9lbmNvZGUtdXJpLWNvbXBvbmVudC5waXBlJztcclxuaW1wb3J0IHsgTmdEZWNvZGVVUklQaXBlTW9kdWxlIH0gZnJvbSAnLi9kZWNvZGUtdXJpLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0RlY29kZVVSSUNvbXBvbmVudFBpcGVNb2R1bGUgfSBmcm9tICcuL2RlY29kZS11cmktY29tcG9uZW50LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1RydW5jYXRlUGlwZU1vZHVsZSB9IGZyb20gJy4vdHJ1bmNhdGUucGlwZSc7XHJcbmltcG9ydCB7IE5nUmVwZWF0UGlwZU1vZHVsZSB9IGZyb20gJy4vcmVwZWF0LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1NsdWdpZnlQaXBlTW9kdWxlIH0gZnJvbSAnLi9zbHVnaWZ5LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1N0cmlwVGFnc1BpcGVNb2R1bGUgfSBmcm9tICcuL3N0cmlwLXRhZ3MucGlwZSc7XHJcbmltcG9ydCB7IE5nTGF0aW5pemVQaXBlTW9kdWxlIH0gZnJvbSAnLi9sYXRpbml6ZS5waXBlJztcclxuaW1wb3J0IHsgTmdXcmFwUGlwZU1vZHVsZSB9IGZyb20gJy4vd3JhcC5waXBlJztcclxuaW1wb3J0IHsgTmdXaXRoUGlwZU1vZHVsZSB9IGZyb20gJy4vd2l0aC5waXBlJztcclxuaW1wb3J0IHsgTmdSZXZlcnNlU3RyUGlwZU1vZHVsZSB9IGZyb20gJy4vcmV2ZXJzZS1zdHIucGlwZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIE5nQ2FwaXRhbGl6ZVBpcGVNb2R1bGUsXHJcbiAgICBOZ0RlY29kZVVSSUNvbXBvbmVudFBpcGVNb2R1bGUsXHJcbiAgICBOZ0RlY29kZVVSSVBpcGVNb2R1bGUsXHJcbiAgICBOZ0VuY29kZVVSSUNvbXBvbmVudFBpcGVNb2R1bGUsXHJcbiAgICBOZ0xlZnRQYWRQaXBlTW9kdWxlLFxyXG4gICAgTmdNYXRjaFBpcGVNb2R1bGUsXHJcbiAgICBOZ1BhZFBpcGVNb2R1bGUsXHJcbiAgICBOZ1JlcGxhY2VQaXBlTW9kdWxlLFxyXG4gICAgTmdSaWdodFBhZFBpcGVNb2R1bGUsXHJcbiAgICBOZ1NwbGl0UGlwZU1vZHVsZSxcclxuICAgIE5nVGVzdFBpcGVNb2R1bGUsXHJcbiAgICBOZ1RyaW1QaXBlTW9kdWxlLFxyXG4gICAgTmdOZXdsaW5lc1BpcGVNb2R1bGUsXHJcbiAgICBOZ1VwcGVyRmlyc3RQaXBlTW9kdWxlLFxyXG4gICAgTmdUZW1wbGF0ZVBpcGVNb2R1bGUsXHJcbiAgICBOZ0VuY29kZVVSSVBpcGVNb2R1bGUsXHJcbiAgICBOZ1RydW5jYXRlUGlwZU1vZHVsZSxcclxuICAgIE5nUmVwZWF0UGlwZU1vZHVsZSxcclxuICAgIE5nU2x1Z2lmeVBpcGVNb2R1bGUsXHJcbiAgICBOZ1N0cmlwVGFnc1BpcGVNb2R1bGUsXHJcbiAgICBOZ0xhdGluaXplUGlwZU1vZHVsZSxcclxuICAgIE5nV3JhcFBpcGVNb2R1bGUsXHJcbiAgICBOZ1dpdGhQaXBlTW9kdWxlLFxyXG4gICAgTmdSZXZlcnNlU3RyUGlwZU1vZHVsZSxcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdTdHJpbmdQaXBlc01vZHVsZSB7fVxyXG4iXX0=