// Inspired from https://github.com/a8m/angular-filter/blob/master/src/_filter/string/truncate.js
import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString, isUndefined } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TruncatePipe = class TruncatePipe {
    transform(input, length, suffix, preserve) {
        if (!isString(input)) {
            return input;
        }
        length = isUndefined(length) ? input.length : length;
        if (input.length <= length) {
            return input;
        }
        preserve = preserve || false;
        suffix = suffix || '';
        let index = length;
        if (preserve) {
            if (input.indexOf(' ', length) === -1) {
                index = input.length;
            }
            else {
                index = input.indexOf(' ', length);
            }
        }
        return input.substring(0, index) + suffix;
    }
};
TruncatePipe.ɵfac = function TruncatePipe_Factory(t) { return new (t || TruncatePipe)(); };
TruncatePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "truncate", type: TruncatePipe, pure: true });
export { TruncatePipe };
let NgTruncatePipeModule = class NgTruncatePipeModule {
};
NgTruncatePipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTruncatePipeModule });
NgTruncatePipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTruncatePipeModule_Factory(t) { return new (t || NgTruncatePipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TruncatePipe, [{
        type: Pipe,
        args: [{
                name: 'truncate'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTruncatePipeModule, { declarations: [TruncatePipe], exports: [TruncatePipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTruncatePipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TruncatePipe],
                exports: [TruncatePipe]
            }]
    }], null, null); })();
export { NgTruncatePipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1bmNhdGUucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9zdHJpbmcvdHJ1bmNhdGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpR0FBaUc7QUFDakc7QUFDQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLdkQsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtBQUFHLElBQzFCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsTUFBZSxFQUFFLE1BQWUsRUFBRSxRQUFrQjtBQUFJLFFBQzVFLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDMUIsWUFBTSxPQUFPLEtBQUssQ0FBQztBQUNuQixTQUFLO0FBQ0wsUUFDSSxNQUFNLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDekQsUUFDSSxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksTUFBTSxFQUFFO0FBQ2hDLFlBQU0sT0FBTyxLQUFLLENBQUM7QUFDbkIsU0FBSztBQUNMLFFBQ0ksUUFBUSxHQUFHLFFBQVEsSUFBSSxLQUFLLENBQUM7QUFDakMsUUFBSSxNQUFNLEdBQUcsTUFBTSxJQUFJLEVBQUUsQ0FBQztBQUMxQixRQUFJLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQztBQUN2QixRQUNJLElBQUksUUFBUSxFQUFFO0FBQ2xCLFlBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtBQUM3QyxnQkFBUSxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztBQUM3QixhQUFPO0FBQUMsaUJBQUs7QUFDYixnQkFBUSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDM0MsYUFBTztBQUNQLFNBQUs7QUFDTCxRQUNJLE9BQU8sS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBQzlDLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQTFCWSxZQUFZLDRCQUh4QixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsVUFBVSxPQUNqQixDQUFDLElBQ1c7R0FBWSxDQTBCeEIsMkZBQ0Q7QUFDQSxTQTVCYSxZQUFZO0FBZ0N6QixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtBQUFHLENBQUEsQ0FBQTtBQUF2QixvQkFBb0IsNEJBSmhDLFFBQVEsQ0FBQyxVQUNSLFlBQVksRUFBRSxDQUFDO1NBQVksQ0FBQyxVQUM1QixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsT0FDeEIsQ0FBQyxJQUNXLG9CQUFvQixDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDcEM7O0FBekNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBMUJBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBMEJBLEFBMUJBLEFBQUEsQUFnQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIEluc3BpcmVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2E4bS9hbmd1bGFyLWZpbHRlci9ibG9iL21hc3Rlci9zcmMvX2ZpbHRlci9zdHJpbmcvdHJ1bmNhdGUuanNcclxuXHJcbmltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzU3RyaW5nLCBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAndHJ1bmNhdGUnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJ1bmNhdGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIGxlbmd0aD86IG51bWJlciwgc3VmZml4Pzogc3RyaW5nLCBwcmVzZXJ2ZT86IGJvb2xlYW4pOiBhbnkge1xyXG4gICAgaWYgKCFpc1N0cmluZyhpbnB1dCkpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIGxlbmd0aCA9IGlzVW5kZWZpbmVkKGxlbmd0aCkgPyBpbnB1dC5sZW5ndGggOiBsZW5ndGg7XHJcblxyXG4gICAgaWYgKGlucHV0Lmxlbmd0aCA8PSBsZW5ndGgpIHtcclxuICAgICAgcmV0dXJuIGlucHV0O1xyXG4gICAgfVxyXG5cclxuICAgIHByZXNlcnZlID0gcHJlc2VydmUgfHwgZmFsc2U7XHJcbiAgICBzdWZmaXggPSBzdWZmaXggfHwgJyc7XHJcbiAgICBsZXQgaW5kZXggPSBsZW5ndGg7XHJcblxyXG4gICAgaWYgKHByZXNlcnZlKSB7XHJcbiAgICAgIGlmIChpbnB1dC5pbmRleE9mKCcgJywgbGVuZ3RoKSA9PT0gLTEpIHtcclxuICAgICAgICBpbmRleCA9IGlucHV0Lmxlbmd0aDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpbmRleCA9IGlucHV0LmluZGV4T2YoJyAnLCBsZW5ndGgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGlucHV0LnN1YnN0cmluZygwLCBpbmRleCkgKyBzdWZmaXg7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1RydW5jYXRlUGlwZV0sXHJcbiAgZXhwb3J0czogW1RydW5jYXRlUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1RydW5jYXRlUGlwZU1vZHVsZSB7fVxyXG4iXX0=