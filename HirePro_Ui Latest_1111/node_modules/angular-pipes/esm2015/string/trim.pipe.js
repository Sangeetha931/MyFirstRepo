import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let TrimPipe = class TrimPipe {
    transform(input) {
        if (!isString(input)) {
            return input;
        }
        return input.trim();
    }
};
TrimPipe.ɵfac = function TrimPipe_Factory(t) { return new (t || TrimPipe)(); };
TrimPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "trim", type: TrimPipe, pure: true });
export { TrimPipe };
let NgTrimPipeModule = class NgTrimPipeModule {
};
NgTrimPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgTrimPipeModule });
NgTrimPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgTrimPipeModule_Factory(t) { return new (t || NgTrimPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TrimPipe, [{
        type: Pipe,
        args: [{
                name: 'trim'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgTrimPipeModule, { declarations: [TrimPipe], exports: [TrimPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTrimPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [TrimPipe],
                exports: [TrimPipe]
            }]
    }], null, null); })();
export { NgTrimPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJpbS5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL3N0cmluZy90cmltLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBSzFDLElBQWEsUUFBUSxHQUFyQixNQUFhLFFBQVE7QUFBRyxJQUN0QixTQUFTLENBQUMsS0FBVTtBQUFJLFFBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDMUIsWUFBTSxPQUFPLEtBQUssQ0FBQztBQUNuQixTQUFLO0FBQ0wsUUFDSSxPQUFPLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN4QixJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFSWSxRQUFRLDRCQUhwQixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsTUFBTSxPQUNiLENBQUMsSUFDVztHQUFRLENBUXBCLCtFQUNEO0FBQ0EsU0FWYSxRQUFRO0FBY3JCLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0FBQUcsQ0FBQSxDQUFBO0FBQW5CLGdCQUFnQiw0QkFKNUIsUUFBUSxDQUFDLFVBQ1IsWUFBWTtBQUFFLENBQUMsUUFBUSxDQUFDLFVBQ3hCLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUNwQixDQUFDLElBQ1csZ0JBQWdCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUNoQzs7QUFyQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFSQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVFBLEFBUkEsQUFBQSxBQWNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAndHJpbScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUcmltUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55KTogYW55IHtcclxuICAgIGlmICghaXNTdHJpbmcoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gaW5wdXQudHJpbSgpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtUcmltUGlwZV0sXHJcbiAgZXhwb3J0czogW1RyaW1QaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nVHJpbVBpcGVNb2R1bGUge31cclxuIl19