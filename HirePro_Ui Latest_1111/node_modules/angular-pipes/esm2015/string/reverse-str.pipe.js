import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let ReverseStrPipe = class ReverseStrPipe {
    transform(input) {
        if (!isString(input)) {
            return input;
        }
        return Array.from(input)
            .reverse()
            .join('');
    }
};
ReverseStrPipe.ɵfac = function ReverseStrPipe_Factory(t) { return new (t || ReverseStrPipe)(); };
ReverseStrPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "reverseStr", type: ReverseStrPipe, pure: true });
export { ReverseStrPipe };
let NgReverseStrPipeModule = class NgReverseStrPipeModule {
};
NgReverseStrPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgReverseStrPipeModule });
NgReverseStrPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgReverseStrPipeModule_Factory(t) { return new (t || NgReverseStrPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReverseStrPipe, [{
        type: Pipe,
        args: [{
                name: 'reverseStr'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgReverseStrPipeModule, { declarations: [ReverseStrPipe], exports: [ReverseStrPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgReverseStrPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [ReverseStrPipe],
                exports: [ReverseStrPipe]
            }]
    }], null, null); })();
export { NgReverseStrPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2ZXJzZS1zdHIucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9zdHJpbmcvcmV2ZXJzZS1zdHIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLMUMsSUFBYSxjQUFjLEdBQTNCLE1BQWEsY0FBYztBQUFHLElBQzVCLFNBQVMsQ0FBQyxLQUFhO0FBQUksUUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUMxQixZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7QUFDNUIsYUFBTyxPQUFPLEVBQUU7QUFDaEIsYUFBTyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDaEIsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBVlksY0FBYyw0QkFIMUIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLFlBQVksT0FDbkIsQ0FBQyxJQUNXO0dBQWMsQ0FVMUIsaUdBQ0Q7QUFDQSxTQVphLGNBQWM7QUFnQjNCLElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0FBQUcsQ0FBQSxDQUFBO0FBQXpCLHNCQUFzQiw0QkFKbEMsUUFBUSxDQUFDLFVBQ1IsWUFBWSxFQUFFLENBQUM7U0FBYyxDQUFDLFVBQzlCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUMxQixDQUFDLElBQ1csc0JBQXNCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUN0Qzs7QUF2QkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVZBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBVUEsQUFWQSxBQUFBLEFBZ0JBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAncmV2ZXJzZVN0cicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSZXZlcnNlU3RyUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIGlmICghaXNTdHJpbmcoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbShpbnB1dClcclxuICAgICAgLnJldmVyc2UoKVxyXG4gICAgICAuam9pbignJyk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1JldmVyc2VTdHJQaXBlXSxcclxuICBleHBvcnRzOiBbUmV2ZXJzZVN0clBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdSZXZlcnNlU3RyUGlwZU1vZHVsZSB7fVxyXG4iXX0=