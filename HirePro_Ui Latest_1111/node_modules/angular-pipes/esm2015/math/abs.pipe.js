import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isNumberFinite } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let AbsPipe = class AbsPipe {
    transform(input) {
        if (!isNumberFinite(input)) {
            return 'NaN';
        }
        return Math.abs(input);
    }
};
AbsPipe.ɵfac = function AbsPipe_Factory(t) { return new (t || AbsPipe)(); };
AbsPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "abs", type: AbsPipe, pure: true });
export { AbsPipe };
let NgAbsPipeModule = class NgAbsPipeModule {
};
NgAbsPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgAbsPipeModule });
NgAbsPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgAbsPipeModule_Factory(t) { return new (t || NgAbsPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbsPipe, [{
        type: Pipe,
        args: [{
                name: 'abs'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgAbsPipeModule, { declarations: [AbsPipe], exports: [AbsPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgAbsPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [AbsPipe],
                exports: [AbsPipe]
            }]
    }], null, null); })();
export { NgAbsPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzLnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvbWF0aC9hYnMucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLaEQsSUFBYSxPQUFPLEdBQXBCLE1BQWEsT0FBTztBQUFHLElBQ3JCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUNoQyxZQUFNLE9BQU8sS0FBSyxDQUFDO0FBQ25CLFNBQUs7QUFDTCxRQUNJLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMzQixJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFSWSxPQUFPLDRCQUhuQixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsS0FBSyxPQUNaLENBQUMsSUFDVztHQUFPLENBUW5CLDRFQUNEO0FBQ0EsU0FWYSxPQUFPO0FBY3BCLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7QUFBRyxDQUFBLENBQUE7QUFBbEIsZUFBZSw0QkFKM0IsUUFBUSxDQUFDLFVBQ1IsWUFBWTtDQUFFLENBQUMsT0FBTyxDQUFDLFVBQ3ZCLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUNuQixDQUFDLElBQ1csZUFBZSxDQUFHOzs7Ozs7Ozs7Ozs7OzswQkFDL0I7O0FBckJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVJBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFSQSxBQUFBLEFBY0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFKQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzTnVtYmVyRmluaXRlIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdhYnMnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWJzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55KTogYW55IHtcclxuICAgIGlmICghaXNOdW1iZXJGaW5pdGUoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiAnTmFOJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTWF0aC5hYnMoaW5wdXQpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtBYnNQaXBlXSxcclxuICBleHBvcnRzOiBbQWJzUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0Fic1BpcGVNb2R1bGUge31cclxuIl19