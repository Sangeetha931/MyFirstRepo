import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isObject } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsObjectPipe = class IsObjectPipe {
    transform(value) {
        return isObject(value);
    }
};
IsObjectPipe.ɵfac = function IsObjectPipe_Factory(t) { return new (t || IsObjectPipe)(); };
IsObjectPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isObject", type: IsObjectPipe, pure: true });
export { IsObjectPipe };
let NgIsObjectPipeModule = class NgIsObjectPipeModule {
};
NgIsObjectPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsObjectPipeModule });
NgIsObjectPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsObjectPipeModule_Factory(t) { return new (t || NgIsObjectPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsObjectPipe, [{
        type: Pipe,
        args: [{
                name: 'isObject'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsObjectPipeModule, { declarations: [IsObjectPipe], exports: [IsObjectPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsObjectPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsObjectPipe],
                exports: [IsObjectPipe]
            }]
    }], null, null); })();
export { NgIsObjectPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtb2JqZWN0LnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvYm9vbGVhbi9pcy1vYmplY3QucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFpQixJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLMUMsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtBQUFHLElBQzFCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsT0FBTyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBSlksWUFBWSw0QkFIeEIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLFVBQVUsT0FDakIsQ0FBQyxJQUNXO0dBQVksQ0FJeEIsMkZBQ0Q7QUFDQSxTQU5hLFlBQVk7QUFVekIsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7QUFBRyxDQUFBLENBQUE7QUFBdkIsb0JBQW9CLDRCQUpoQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFZLENBQUMsVUFDNUIsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLE9BQ3hCLENBQUMsSUFDVyxvQkFBb0IsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3BDOztBQWpCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFKQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlVHJhbnNmb3JtLCBQaXBlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNPYmplY3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNPYmplY3RQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBpc09iamVjdCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzT2JqZWN0UGlwZV0sXHJcbiAgZXhwb3J0czogW0lzT2JqZWN0UGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0lzT2JqZWN0UGlwZU1vZHVsZSB7fVxyXG4iXX0=