import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isNull } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsNullPipe = class IsNullPipe {
    transform(value) {
        return isNull(value);
    }
};
IsNullPipe.ɵfac = function IsNullPipe_Factory(t) { return new (t || IsNullPipe)(); };
IsNullPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isNull", type: IsNullPipe, pure: true });
export { IsNullPipe };
let NgIsNullPipeModule = class NgIsNullPipeModule {
};
NgIsNullPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsNullPipeModule });
NgIsNullPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsNullPipeModule_Factory(t) { return new (t || NgIsNullPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsNullPipe, [{
        type: Pipe,
        args: [{
                name: 'isNull'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsNullPipeModule, { declarations: [IsNullPipe], exports: [IsNullPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsNullPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsNullPipe],
                exports: [IsNullPipe]
            }]
    }], null, null); })();
export { NgIsNullPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbnVsbC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtbnVsbC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUt4QyxJQUFhLFVBQVUsR0FBdkIsTUFBYSxVQUFVO0FBQUcsSUFDeEIsU0FBUyxDQUFDLEtBQVU7QUFBSSxRQUN0QixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6QixJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFKWSxVQUFVLDRCQUh0QixJQUFJLENBQUMsVUFDSixJQUFJLEVBQUUsUUFBUSxPQUNmLENBQUMsSUFDVztHQUFVLENBSXRCLHFGQUNEO0FBQ0EsU0FOYSxVQUFVO0FBVXZCLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0FBQUcsQ0FBQSxDQUFBO0FBQXJCLGtCQUFrQiw0QkFKOUIsUUFBUSxDQUFDLFVBQ1IsWUFBWSxFQUFFLENBQUM7U0FBVSxDQUFDLFVBQzFCLE9BQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUN0QixDQUFDLElBQ1csa0JBQWtCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUNsQzs7QUFqQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSwgUGlwZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNOdWxsIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6ICdpc051bGwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNOdWxsUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybSh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gaXNOdWxsKHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbSXNOdWxsUGlwZV0sXHJcbiAgZXhwb3J0czogW0lzTnVsbFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdJc051bGxQaXBlTW9kdWxlIHt9XHJcbiJdfQ==