import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let IsGreaterPipe = class IsGreaterPipe {
    transform(first, second) {
        return first > second;
    }
};
IsGreaterPipe.ɵfac = function IsGreaterPipe_Factory(t) { return new (t || IsGreaterPipe)(); };
IsGreaterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "greater", type: IsGreaterPipe, pure: true });
export { IsGreaterPipe };
let NgIsGreaterPipeModule = class NgIsGreaterPipeModule {
};
NgIsGreaterPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsGreaterPipeModule });
NgIsGreaterPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsGreaterPipeModule_Factory(t) { return new (t || NgIsGreaterPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsGreaterPipe, [{
        type: Pipe,
        args: [{
                name: 'greater'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsGreaterPipeModule, { declarations: [IsGreaterPipe], exports: [IsGreaterPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsGreaterPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsGreaterPipe],
                exports: [IsGreaterPipe]
            }]
    }], null, null); })();
export { NgIsGreaterPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZ3JlYXRlci5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtZ3JlYXRlci5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzlELElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7QUFBRyxJQUMzQixTQUFTLENBQUMsS0FBVSxFQUFFLE1BQVc7QUFBSSxRQUNuQyxPQUFPLEtBQUssR0FBRyxNQUFNLENBQUM7QUFDMUIsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBSlksYUFBYSw0QkFIekIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLFNBQVMsT0FDaEIsQ0FBQyxJQUNXO0NBQWEsQ0FJekIsOEZBQ0Q7QUFDQSxTQU5hLGFBQWE7QUFVMUIsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7QUFBRyxDQUFBLENBQUE7QUFBeEIscUJBQXFCLDRCQUpqQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFhLENBQUMsVUFDN0IsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDLE9BQ3pCLENBQUMsSUFDVyxxQkFBcUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3JDOztBQWhCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSwgUGlwZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZ3JlYXRlcicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0dyZWF0ZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGZpcnN0OiBhbnksIHNlY29uZDogYW55KTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gZmlyc3QgPiBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzR3JlYXRlclBpcGVdLFxyXG4gIGV4cG9ydHM6IFtJc0dyZWF0ZXJQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nSXNHcmVhdGVyUGlwZU1vZHVsZSB7fVxyXG4iXX0=