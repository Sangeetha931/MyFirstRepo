import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsStringPipe = class IsStringPipe {
    transform(value) {
        return isString(value);
    }
};
IsStringPipe.ɵfac = function IsStringPipe_Factory(t) { return new (t || IsStringPipe)(); };
IsStringPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isString", type: IsStringPipe, pure: true });
export { IsStringPipe };
let NgIsStringPipeModule = class NgIsStringPipeModule {
};
NgIsStringPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsStringPipeModule });
NgIsStringPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsStringPipeModule_Factory(t) { return new (t || NgIsStringPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsStringPipe, [{
        type: Pipe,
        args: [{
                name: 'isString'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsStringPipeModule, { declarations: [IsStringPipe], exports: [IsStringPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsStringPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsStringPipe],
                exports: [IsStringPipe]
            }]
    }], null, null); })();
export { NgIsStringPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc3RyaW5nLnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvYm9vbGVhbi9pcy1zdHJpbmcucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFpQixJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLMUMsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtBQUFHLElBQzFCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsT0FBTyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBSlksWUFBWSw0QkFIeEIsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLFVBQVUsT0FDakIsQ0FBQyxJQUNXO0dBQVksQ0FJeEIsMkZBQ0Q7QUFDQSxTQU5hLFlBQVk7QUFVekIsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7QUFBRyxDQUFBLENBQUE7QUFBdkIsb0JBQW9CLDRCQUpoQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFZLENBQUMsVUFDNUIsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLE9BQ3hCLENBQUMsSUFDVyxvQkFBb0IsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3BDOztBQWpCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFKQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlVHJhbnNmb3JtLCBQaXBlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNTdHJpbmcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNTdHJpbmdQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBpc1N0cmluZyh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzU3RyaW5nUGlwZV0sXHJcbiAgZXhwb3J0czogW0lzU3RyaW5nUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0lzU3RyaW5nUGlwZU1vZHVsZSB7fVxyXG4iXX0=