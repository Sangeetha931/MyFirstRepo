import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isUndefined } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsDefinedPipe = class IsDefinedPipe {
    transform(value) {
        return !isUndefined(value);
    }
};
IsDefinedPipe.ɵfac = function IsDefinedPipe_Factory(t) { return new (t || IsDefinedPipe)(); };
IsDefinedPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isDefined", type: IsDefinedPipe, pure: true });
export { IsDefinedPipe };
let NgIsDefinedPipeModule = class NgIsDefinedPipeModule {
};
NgIsDefinedPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsDefinedPipeModule });
NgIsDefinedPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsDefinedPipeModule_Factory(t) { return new (t || NgIsDefinedPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsDefinedPipe, [{
        type: Pipe,
        args: [{
                name: 'isDefined'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsDefinedPipeModule, { declarations: [IsDefinedPipe], exports: [IsDefinedPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsDefinedPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsDefinedPipe],
                exports: [IsDefinedPipe]
            }]
    }], null, null); })();
export { NgIsDefinedPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZGVmaW5lZC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtZGVmaW5lZC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUs3QyxJQUFhLGFBQWEsR0FBMUIsTUFBYSxhQUFhO0FBQUcsSUFDM0IsU0FBUyxDQUFDLEtBQVU7QUFBSSxRQUN0QixPQUFPLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQy9CLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQUpZLGFBQWEsNEJBSHpCLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxXQUFXLE9BQ2xCLENBQUMsSUFDVztHQUFhLENBSXpCLDhGQUNEO0FBQ0EsU0FOYSxhQUFhO0FBVTFCLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0FBQUcsQ0FBQSxDQUFBO0FBQXhCLHFCQUFxQiw0QkFKakMsUUFBUSxDQUFDLFVBQ1IsWUFBWSxFQUFFLENBQUM7U0FBYSxDQUFDLFVBQzdCLE9BQU8sRUFBRSxDQUFDLGFBQWEsQ0FBQyxPQUN6QixDQUFDLElBQ1cscUJBQXFCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUNyQzs7QUFqQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFKQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlVHJhbnNmb3JtLCBQaXBlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNEZWZpbmVkJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIElzRGVmaW5lZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0odmFsdWU6IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuICFpc1VuZGVmaW5lZCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzRGVmaW5lZFBpcGVdLFxyXG4gIGV4cG9ydHM6IFtJc0RlZmluZWRQaXBlXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nSXNEZWZpbmVkUGlwZU1vZHVsZSB7fVxyXG4iXX0=