import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let IsLessOrEqualPipe = class IsLessOrEqualPipe {
    transform(first, second) {
        return first <= second;
    }
};
IsLessOrEqualPipe.ɵfac = function IsLessOrEqualPipe_Factory(t) { return new (t || IsLessOrEqualPipe)(); };
IsLessOrEqualPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "lessOrEqual", type: IsLessOrEqualPipe, pure: true });
export { IsLessOrEqualPipe };
let NgIsLessOrEqualPipeModule = class NgIsLessOrEqualPipeModule {
};
NgIsLessOrEqualPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsLessOrEqualPipeModule });
NgIsLessOrEqualPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsLessOrEqualPipeModule_Factory(t) { return new (t || NgIsLessOrEqualPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsLessOrEqualPipe, [{
        type: Pipe,
        args: [{
                name: 'lessOrEqual'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsLessOrEqualPipeModule, { declarations: [IsLessOrEqualPipe], exports: [IsLessOrEqualPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsLessOrEqualPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsLessOrEqualPipe],
                exports: [IsLessOrEqualPipe]
            }]
    }], null, null); })();
export { NgIsLessOrEqualPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbGVzcy1vci1lcXVhbC5waXBlLmpzIiwic291cmNlcyI6WyJhbmd1bGFyLXBpcGVzL2Jvb2xlYW4vaXMtbGVzcy1vci1lcXVhbC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzlELElBQWEsaUJBQWlCLEdBQTlCLE1BQWEsaUJBQWlCO0FBQUcsSUFDL0IsU0FBUyxDQUFDLEtBQVUsRUFBRSxNQUFXO0FBQUksUUFDbkMsT0FBTyxLQUFLLElBQUksTUFBTSxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQUpZLGlCQUFpQiw0QkFIN0IsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLGFBQWEsT0FDcEIsQ0FBQyxJQUNXO0NBQWlCLENBSTdCLDBHQUNEO0FBQ0EsU0FOYSxpQkFBaUI7QUFVOUIsSUFBYSx5QkFBeUIsR0FBdEMsTUFBYSx5QkFBeUI7QUFBRyxDQUFBLENBQUE7QUFBNUIseUJBQXlCLDRCQUpyQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFpQixDQUFDLFVBQ2pDLE9BQU8sRUFBRSxDQUFDLGlCQUFpQixDQUFDLE9BQzdCLENBQUMsSUFDVyx5QkFBeUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3pDOztBQWhCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSwgUGlwZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGVzc09yRXF1YWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNMZXNzT3JFcXVhbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oZmlyc3Q6IGFueSwgc2Vjb25kOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBmaXJzdCA8PSBzZWNvbmQ7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzTGVzc09yRXF1YWxQaXBlXSxcclxuICBleHBvcnRzOiBbSXNMZXNzT3JFcXVhbFBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdJc0xlc3NPckVxdWFsUGlwZU1vZHVsZSB7fVxyXG4iXX0=