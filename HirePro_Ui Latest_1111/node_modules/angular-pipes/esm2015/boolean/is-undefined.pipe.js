import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isUndefined } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsUndefinedPipe = class IsUndefinedPipe {
    transform(value) {
        return isUndefined(value);
    }
};
IsUndefinedPipe.ɵfac = function IsUndefinedPipe_Factory(t) { return new (t || IsUndefinedPipe)(); };
IsUndefinedPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isUndefined", type: IsUndefinedPipe, pure: true });
export { IsUndefinedPipe };
let NgIsUndefinedPipeModule = class NgIsUndefinedPipeModule {
};
NgIsUndefinedPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsUndefinedPipeModule });
NgIsUndefinedPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsUndefinedPipeModule_Factory(t) { return new (t || NgIsUndefinedPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsUndefinedPipe, [{
        type: Pipe,
        args: [{
                name: 'isUndefined'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsUndefinedPipeModule, { declarations: [IsUndefinedPipe], exports: [IsUndefinedPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsUndefinedPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsUndefinedPipe],
                exports: [IsUndefinedPipe]
            }]
    }], null, null); })();
export { NgIsUndefinedPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtdW5kZWZpbmVkLnBpcGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItcGlwZXMvYm9vbGVhbi9pcy11bmRlZmluZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFpQixJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFLN0MsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBZTtBQUFHLElBQzdCLFNBQVMsQ0FBQyxLQUFVO0FBQUksUUFDdEIsT0FBTyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUIsSUFBRSxDQUFDO0FBQ0gsQ0FBQyxDQUFBO0FBSlksZUFBZSw0QkFIM0IsSUFBSSxDQUFDLFVBQ0osSUFBSSxFQUFFLGFBQWEsT0FDcEIsQ0FBQyxJQUNXO0dBQWUsQ0FJM0Isb0dBQ0Q7QUFDQSxTQU5hLGVBQWU7QUFVNUIsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBdUI7QUFBRyxDQUFBLENBQUE7QUFBMUIsdUJBQXVCLDRCQUpuQyxRQUFRLENBQUMsVUFDUixZQUFZLEVBQUUsQ0FBQztTQUFlLENBQUMsVUFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDLE9BQzNCLENBQUMsSUFDVyx1QkFBdUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7MEJBQ3ZDOztBQWpCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFKQSxBQUFBLEFBSEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBSkEsQUFBQSxBQVVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlVHJhbnNmb3JtLCBQaXBlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNVbmRlZmluZWQnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXNVbmRlZmluZWRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBhbnkpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBpc1VuZGVmaW5lZCh2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzVW5kZWZpbmVkUGlwZV0sXHJcbiAgZXhwb3J0czogW0lzVW5kZWZpbmVkUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0lzVW5kZWZpbmVkUGlwZU1vZHVsZSB7fVxyXG4iXX0=