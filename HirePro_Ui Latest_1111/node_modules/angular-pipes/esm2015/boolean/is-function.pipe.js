import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isFunction } from '../utils/utils';
import * as ɵngcc0 from '@angular/core';
let IsFunctionPipe = class IsFunctionPipe {
    transform(value) {
        return isFunction(value);
    }
};
IsFunctionPipe.ɵfac = function IsFunctionPipe_Factory(t) { return new (t || IsFunctionPipe)(); };
IsFunctionPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isFunction", type: IsFunctionPipe, pure: true });
export { IsFunctionPipe };
let NgIsFunctionPipeModule = class NgIsFunctionPipeModule {
};
NgIsFunctionPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgIsFunctionPipeModule });
NgIsFunctionPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgIsFunctionPipeModule_Factory(t) { return new (t || NgIsFunctionPipeModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsFunctionPipe, [{
        type: Pipe,
        args: [{
                name: 'isFunction'
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgIsFunctionPipeModule, { declarations: [IsFunctionPipe], exports: [IsFunctionPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIsFunctionPipeModule, [{
        type: NgModule,
        args: [{
                declarations: [IsFunctionPipe],
                exports: [IsFunctionPipe]
            }]
    }], null, null); })();
export { NgIsFunctionPipeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZnVuY3Rpb24ucGlwZS5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1waXBlcy9ib29sZWFuL2lzLWZ1bmN0aW9uLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBaUIsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBSzVDLElBQWEsY0FBYyxHQUEzQixNQUFhLGNBQWM7QUFBRyxJQUM1QixTQUFTLENBQUMsS0FBVTtBQUFJLFFBQ3RCLE9BQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzdCLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQUpZLGNBQWMsNEJBSDFCLElBQUksQ0FBQyxVQUNKLElBQUksRUFBRSxZQUFZLE9BQ25CLENBQUMsSUFDVztHQUFjLENBSTFCLGlHQUNEO0FBQ0EsU0FOYSxjQUFjO0FBVTNCLElBQWEsc0JBQXNCLEdBQW5DLE1BQWEsc0JBQXNCO0FBQUcsQ0FBQSxDQUFBO0FBQXpCLHNCQUFzQiw0QkFKbEMsUUFBUSxDQUFDLFVBQ1IsWUFBWSxFQUFFLENBQUM7U0FBYyxDQUFDLFVBQzlCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUMxQixDQUFDLElBQ1csc0JBQXNCLENBQUc7Ozs7Ozs7Ozs7Ozs7OzBCQUN0Qzs7QUFqQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUhBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUpBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUpBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSwgUGlwZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnaXNGdW5jdGlvbicsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0Z1bmN0aW9uUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybSh2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gaXNGdW5jdGlvbih2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0lzRnVuY3Rpb25QaXBlXSxcclxuICBleHBvcnRzOiBbSXNGdW5jdGlvblBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdJc0Z1bmN0aW9uUGlwZU1vZHVsZSB7fVxyXG4iXX0=